{"version":3,"sources":["button.js","input.js","manga.js","getdata.js","draft.js","editor.js","index.js"],"names":["ButtonContainer","props","handleDomEvent","event","logs","state","slice","unshift","type","setState","_icon","undefined","_onClick","_text","onClick","this","onMouseDown","onMouseUp","onFocus","onBlur","onKeyPress","icon","React","Component","_onChange","onChange","style","width","color","App","_changed","_value","target","value","_downlaod","bind","data","fname","fetch","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","serialize","method","then","response","json","console","log","catch","error","className","href","src","height","hasCommandModifier","KeyBindingUtil","myKeyBindingFn","e","keyCode","getDefaultKeyBinding","RichEditorExample","editorState","contentState","getCurrentContent","saveContent","debounce","content","window","localStorage","setItem","JSON","stringify","convertToRaw","_getLengthOfSelectedText","currentSelection","getSelection","length","isCollapsed","currentContent","startKey","getStartKey","endKey","getEndKey","startBlock","getIsBackward","getBlockMap","getBlockForKey","endBlock","isStartAndEndBlockAreTheSame","startBlockTextLength","getLength","startSelectedTextLength","getStartOffset","endSelectedTextLength","getEndOffset","keyAfterEnd","getKeyAfter","currentKey","_handleBeforeInput","getPlainText","MAX_LENGTH","_handlePastedText","pastedText","currentContentLength","selectedTextLength","my_func","raw_state","EditorState","createWithContent","convertFromRaw","parse","createEmpty","focus","refs","editor","handleKeyCommand","onTab","_onTab","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","command","raw_content","newState","RichUtils","blockType","inlineStyle","hasText","first","getType","onToggle","backgroundColor","blockStyleFn","getBlockStyle","customStyleMap","styleMap","placeholder","keyBindingFn","ref","spellCheck","CODE","fontFamily","fontSize","padding","block","StyleButton","preventDefault","active","label","BLOCK_TYPES","BlockStyleControls","selection","map","key","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","myRef","current","set_editor","name","createRef","headers","body","saving_function","handleBeforeInput","handlePastedText","render","document","getElementById","_manga","_editor","Base","_back","Head"],"mappings":"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","file":"static/js/main.4acadcbc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonGroup, SplitButton, SplitButtonItem, ToolbarSpacer, DropDownButton, DropDownButtonItem, Toolbar, ToolbarItem, ToolbarSeparator } from '@progress/kendo-react-buttons'\n\nclass ButtonContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this._icon = props._icon ? props._icon : undefined\n\n        if(props._onClick){\n            this.handleDomEvent = props._onClick\n        }\n\n        if(props._text){\n            this._text = props._text\n        }\n\n        this.state = {\n            logs: []\n        };\n    }\n\n    handleDomEvent = (event) => {\n        let logs = this.state.logs.slice();\n\n        logs.unshift(event.type)\n\n        this.setState({logs: logs})\n    }\n    render() {\n        return ([\n            <Button\n                onClick={this.handleDomEvent}\n                onMouseDown={this.handleDomEvent}\n                onMouseUp={this.handleDomEvent}\n                onFocus={this.handleDomEvent}\n                onBlur={this.handleDomEvent}\n                onKeyPress={this.handleDomEvent}\n                icon={this._icon}\n            >\n                {this._text}\n            </Button>,\n            \n        ])\n    }\n}\n\nexport default ButtonContainer","import React, { Component } from 'react';\nimport { Input } from '@progress/kendo-react-inputs'\n\nclass ButtonContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this._onChange = props._onChange ? props._onChange : undefined\n\n        this.state = {\n            logs: []\n        };\n    }\n\n    handleDomEvent = (event) => {\n        let logs = this.state.logs.slice();\n\n        logs.unshift(event.type)\n\n        this.setState({ logs: logs })\n    }\n    render() {\n        return ([\n            <Input\n                onChange={this._onChange}\n                style={{\n                    width: '350px',\n                    color: 'white',\n                }}\n            />,\n        ])\n    }\n}\n\nexport default ButtonContainer","import React, { Component } from 'react';\nimport './style.css';\n\nimport Btn from './button';\nimport Inp from './input';\nimport GetData from './getdata';\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._value = ''\n\t\tthis._downlaod = this._downlaod.bind(this);\n\t}\n\n\t_changed = (state) => {\n\t\tthis._value = (state.target.value);\n\t}\n\n\t_downlaod() {\n\t\tvar val = this._value\n\t\tvar data = {\n\t\t\tfname: this._value\n\t\t}\n\n\t\tfunction serialize(obj) {\n\t\t\tvar str = [];\n\t\t\tfor (var p in obj)\n\t\t\t  if (obj.hasOwnProperty(p)) {\n\t\t\t\tstr.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n\t\t\t  }\n\t\t\treturn str.join(\"&\");\n\t\t  }\n\n\n\t\tfetch('http://creepyfuck.tech/down?' + serialize(data), {\n\t\t\tmethod: 'POST',\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Success:', data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* <img src='/comic.png' height='100px' /> */}\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t<Inp\n\t\t\t\t\t\t_onChange={this._changed}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Btn \n\t\t\t\t\t\t_onClick={this._downlaod}\n\t\t\t\t\t\t_text={'Download'}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<a href='http://creepyfuck.tech/Manga/'>\n\t\t\t\t\t\t<img src='/comic.png' height='50px' />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\n\t\t\t\t<br />\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App","import React, { Component } from 'react';\r\nimport { EditorState, Editor, convertToRaw, convertFromRaw } from 'draft-js';\r\n\r\nclass GetData extends Component{\r\n\r\n\r\nconstructor(props){\r\n  super(props)\r\n  this.state = {\r\n    articleData: []\r\n  }\r\nthis.article=this.article.bind(this);\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n\r\nlet getRawData = JSON.parse(JSON.stringify((window.localStorage.getItem('content'))));\r\n\r\nlet rawData= JSON.parse(getRawData);\r\n\r\nconsole.log(rawData.blocks)\r\n\r\n  //if(rawData){\r\n    this.setState({\r\n      articleData: rawData.blocks\r\n    })\r\n  //}\r\n\r\n console.log(this.state.articleData)   \r\n\r\n}\r\n\r\narticle=(data)=>{\r\n  console.log('asdada');\r\n  data.map(item => {\r\n    return <h1>hello</h1>;\r\n  })\r\n\r\n}\r\n\r\n  render(){\r\n\r\n    if (!this.state.articleData) {\r\n      return (\r\n        <h3 className=\"loading\">Loading...</h3>\r\n      );\r\n    }\r\n  \r\n    return(\r\n      <div>\r\n        {this.article(this.state.articleData)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetData;","import React, { Component } from 'react';\r\nimport 'draft-js/dist/Draft.css';\r\nimport debounce from 'lodash/debounce';\r\nimport {\r\n\tEditor,\r\n\tEditorState,\r\n\tRichUtils,\r\n\tconvertFromRaw,\r\n\tconvertToRaw,\r\n\tgetDefaultKeyBinding,\r\n\tKeyBindingUtil\r\n} from 'draft-js';\r\n\r\nconst { hasCommandModifier } = KeyBindingUtil;\r\n\r\nfunction myKeyBindingFn(e: SyntheticKeyboardEvent): string {\r\n\tif (e.keyCode === 83 /* `S` key */ && hasCommandModifier(e)) {\r\n\t\treturn 'myeditor-save';\r\n\t}\r\n\treturn getDefaultKeyBinding(e);\r\n}\r\n\r\nconst MAX_LENGTH = 10;\r\n\r\nclass RichEditorExample extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tif (props.my_func) {\r\n\t\t\tthis.my_func = props.my_func\r\n\t\t}\r\n\r\n\t\tconsole.log(props.raw_state)\r\n\r\n\t\tif (props.raw_state) {\r\n\t\t\tconsole.log('Raw State Prop present', props.raw_state)\r\n\t\t\tthis.state = {\r\n\t\t\t\teditorState: EditorState.createWithContent(convertFromRaw(JSON.parse(props.raw_state)))\r\n\t\t\t};\r\n\t\t} else {\r\n\r\n\t\t\tthis.state = {\r\n\t\t\t\teditorState: EditorState.createEmpty()\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis._getLengthOfSelectedText = this._getLengthOfSelectedText.bind(this);\r\n\t\tthis._handleBeforeInput = this._handleBeforeInput.bind(this);\r\n\r\n\t\tthis.focus = () => this.refs.editor.focus();\r\n\r\n\t\t//this.handleKeyCommand = (command) => this._handleKeyCommand(command);\r\n\t\tthis.handleKeyCommand = this.handleKeyCommand.bind(this);\r\n\t\tthis.onTab = (e) => this._onTab(e);\r\n\t\tthis.toggleBlockType = (type) => this._toggleBlockType(type);\r\n\t\tthis.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\r\n\t}\r\n\r\n\tset_editor(raw_state) {\r\n\t\tthis.setState({\r\n\t\t\teditorState: EditorState.createWithContent(convertFromRaw(JSON.parse(raw_state)))\r\n\t\t})\r\n\t}\r\n\r\n\tmy_func() {\r\n\t\tconsole.log('My Function is Running')\r\n\t}\r\n\r\n\thandleKeyCommand(command: string): DraftHandleValue {\r\n\t\tif (command === 'myeditor-save') {\r\n\t\t\t// Perform a request to save your contents, set\r\n\t\t\t// a new `editorState`, etc.\r\n\t\t\tvar raw_content = convertToRaw(this.state.editorState.getCurrentContent());\r\n\t\t\t//var raw_state = convertToRaw(this.state.editorState);\r\n\t\t\tvar _state = convertFromRaw(raw_content)\r\n\t\t\t// window.localStorage.setItem('content', JSON.stringify(raw_content));\r\n\t\t\t// this.state = {\r\n\t\t\t//     editorState: EditorState.createEmpty(),\r\n\t\t\t// };\r\n\r\n\t\t\tthis.my_func(JSON.stringify(raw_content))\r\n\r\n\t\t\tconsole.log('saved', raw_content)\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\t\treturn 'not-handled';\r\n\t}\r\n\r\n\tonChange = (editorState) => {\r\n\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t//console.log('content state', convertToRaw(contentState));\r\n\t\tthis.saveContent(contentState);\r\n\t\tthis.setState({ editorState });\r\n\t}\r\n\r\n\tsaveContent = debounce((content) => {\r\n\t\twindow.localStorage.setItem('content', JSON.stringify((convertToRaw(content))));\r\n\t}, 1000);\r\n\r\n\t_getLengthOfSelectedText = () => {\r\n\t\tconsole.log('say');\r\n\t\tconst currentSelection = this.state.editorState.getSelection();\r\n\t\tconst isCollapsed = currentSelection.isCollapsed();\r\n\r\n\t\tlet length = 0;\r\n\r\n\t\tif (!isCollapsed) {\r\n\t\t\tconst currentContent = this.state.editorState.getCurrentContent();\r\n\t\t\tconst startKey = currentSelection.getStartKey();\r\n\t\t\tconst endKey = currentSelection.getEndKey();\r\n\t\t\tconst isBackward = currentSelection.getIsBackward();\r\n\t\t\tconst blockMap = currentContent.getBlockMap();\r\n\t\t\tconst startBlock = currentContent.getBlockForKey(startKey);\r\n\t\t\tconst endBlock = currentContent.getBlockForKey(endKey);\r\n\t\t\tconst isStartAndEndBlockAreTheSame = startKey === endKey;\r\n\t\t\tconst startBlockTextLength = startBlock.getLength();\r\n\t\t\tconst endBlockTextLength = endBlock.getLength();\r\n\t\t\tconst startSelectedTextLength = startBlockTextLength - currentSelection.getStartOffset();\r\n\t\t\tconst endSelectedTextLength = currentSelection.getEndOffset();\r\n\t\t\tconst keyAfterEnd = currentContent.getKeyAfter(endKey);\r\n\r\n\t\t\tif (isStartAndEndBlockAreTheSame) {\r\n\t\t\t\tlength += currentSelection.getEndOffset() - currentSelection.getStartOffset();\r\n\t\t\t} else {\r\n\t\t\t\tlet currentKey = startKey;\r\n\t\t\t\tlet counter = 0;\r\n\r\n\t\t\t\twhile (currentKey && currentKey !== keyAfterEnd) {\r\n\t\t\t\t\tif (currentKey === startKey) {\r\n\t\t\t\t\t\tlength += startSelectedTextLength + 1;\r\n\t\t\t\t\t} else if (currentKey === endKey) {\r\n\t\t\t\t\t\tlength += endSelectedTextLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlength += currentContent.getBlockForKey(currentKey).getLength() + 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentKey = currentContent.getKeyAfter(currentKey);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn length;\r\n\t}\r\n\r\n\t_handleBeforeInput = () => {\r\n\t\tconsole.log('hello');\r\n\t\tconst currentContent = this.state.editorState.getCurrentContent();\r\n\t\tconst currentContentLength = currentContent.getPlainText('').length\r\n\r\n\t\tif (currentContentLength > MAX_LENGTH - 1) {\r\n\t\t\tconsole.log('you can type max ten characters');\r\n\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\t}\r\n\r\n\t_handlePastedText = (pastedText) => {\r\n\t\tconst currentContent = this.state.editorState.getCurrentContent();\r\n\t\tconst currentContentLength = currentContent.getPlainText('').length;\r\n\t\tconst selectedTextLength = this._getLengthOfSelectedText();\r\n\r\n\t\tif (currentContentLength + pastedText.length - selectedTextLength > MAX_LENGTH) {\r\n\t\t\tconsole.log('you can type max ten characters');\r\n\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\t}\r\n\r\n\t_handleKeyCommand(command) {\r\n\t\tconst { editorState } = this.state;\r\n\t\tconst newState = RichUtils.handleKeyCommand(editorState, command);\r\n\t\tif (newState) {\r\n\t\t\tthis.onChange(newState);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t_onTab(e) {\r\n\t\tconst maxDepth = 4;\r\n\t\tthis.onChange(RichUtils.onTab(e, this.state.editorState, maxDepth));\r\n\t}\r\n\r\n\t_toggleBlockType(blockType) {\r\n\t\tthis.onChange(\r\n\t\t\tRichUtils.toggleBlockType(\r\n\t\t\t\tthis.state.editorState,\r\n\t\t\t\tblockType\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t_toggleInlineStyle(inlineStyle) {\r\n\t\tif(inlineStyle == 'SAVE') {\r\n\t\t\tvar raw_content = convertToRaw(this.state.editorState.getCurrentContent());\r\n\t\t\tthis.my_func(JSON.stringify(raw_content))\r\n\t\t} else {\r\n\t\t\tthis.onChange(\r\n\t\t\t\tRichUtils.toggleInlineStyle(\r\n\t\t\t\t\tthis.state.editorState,\r\n\t\t\t\t\tinlineStyle\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { editorState } = this.state;\r\n\r\n\t\t// If the user changes block type before entering any text, we can\r\n\t\t// either style the placeholder or hide it. Let's just hide it now.\r\n\t\tlet className = 'RichEditor-editor';\r\n\t\tvar contentState = editorState.getCurrentContent();\r\n\t\tif (!contentState.hasText()) {\r\n\t\t\tif (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n\t\t\t\tclassName += ' RichEditor-hidePlaceholder';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (!this.state.editorState) {\r\n\t\t\treturn (\r\n\t\t\t\t<h3 className=\"loading\">Loading...</h3>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"RichEditor-root\">\r\n\t\t\t\t\t<BlockStyleControls\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tonToggle={this.toggleBlockType}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InlineStyleControls\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tonToggle={this.toggleInlineStyle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={className} style={{backgroundColor: 'white'}} onClick={this.focus}>\r\n\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\tblockStyleFn={getBlockStyle}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\t\thandleKeyCommand={this.handleKeyCommand}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\tonTab={this.onTab}\r\n\t\t\t\t\t\t\tplaceholder=\"Tell a story...\"\r\n\t\t\t\t\t\t\tkeyBindingFn={myKeyBindingFn}\r\n\t\t\t\t\t\t\tref=\"editor\"\r\n\t\t\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\t\t\tmy_func={this.my_func}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n\tCODE: {\r\n\t\tbackgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n\t\tfontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n\t\tfontSize: 12,\r\n\t\tpadding: 1,\r\n\t},\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n\tswitch (block.getType()) {\r\n\t\tcase 'blockquote': return 'RichEditor-blockquote';\r\n\t\tdefault: return null;\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass StyleButton extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.onToggle = (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.props.onToggle(this.props.style);\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet className = 'RichEditor-styleButton ui button';\r\n\t\tif (this.props.active) {\r\n\t\t\tclassName += ' RichEditor-activeButton';\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<span className={className} onMouseDown={this.onToggle}>\r\n\t\t\t\t{this.props.label}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nconst BLOCK_TYPES = [\r\n\t{ label: 'H1', style: 'header-one' },\r\n\t{ label: 'H2', style: 'header-two' },\r\n\t{ label: 'H3', style: 'header-three' },\r\n\t{ label: 'H4', style: 'header-four' },\r\n\t{ label: 'H5', style: 'header-five' },\r\n\t{ label: 'H6', style: 'header-six' },\r\n\t{ label: 'Blockquote', style: 'blockquote' },\r\n\t{ label: 'UL', style: 'unordered-list-item' },\r\n\t{ label: 'OL', style: 'ordered-list-item' },\r\n\t{ label: 'Code Block', style: 'code-block' },\r\n];\r\n\r\n\r\n\r\nconst BlockStyleControls = (props) => {\r\n\tconst { editorState } = props;\r\n\tconst selection = editorState.getSelection();\r\n\tconst blockType = editorState\r\n\t\t.getCurrentContent()\r\n\t\t.getBlockForKey(selection.getStartKey())\r\n\t\t.getType();\r\n\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{BLOCK_TYPES.map((type) =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={type.style === blockType}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nvar INLINE_STYLES = [\r\n\t{ label: 'Bold', style: 'BOLD' },\r\n\t{ label: 'Italic', style: 'ITALIC' },\r\n\t{ label: 'Underline', style: 'UNDERLINE' },\r\n\t{ label: 'Monospace', style: 'CODE' },\r\n\t{ label: 'Save', style: 'SAVE' },\r\n];\r\n\r\n\r\n\r\nconst InlineStyleControls = (props) => {\r\n\tvar currentStyle = props.editorState.getCurrentInlineStyle();\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{INLINE_STYLES.map(type =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={currentStyle.has(type.style)}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport default RichEditorExample;","import RichEditorExample from './draft';\nimport Btn from './button';\nimport Inp from './input';\nimport GetData from './getdata';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport './style.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.raw_state = '';\n\t\tvar _raw = ''\n\t\tvar express_server = '/react/content';\n\t\tfetch(express_server, {\n\t\t\tmethod: 'GET',\n\t\t}).then(response => response.json()).then(data => {\n\n\t\t\tif (data.raw_state) {\n\t\t\t\tthis.myRef.current.set_editor(data.raw_state)\n\t\t\t}\n\n\t\t}).catch((error) => {\n\t\t\tconsole.error('Error:', error);\n\t\t});\n\n\t\tthis.state = {\n\t\t\tname: 'React'\n\t\t};\n\n\t\tthis.myRef = React.createRef()\n\t}\n\n\tsaving_function(raw_state) {\n\t\tvar data = { raw_state: raw_state };\n\t\tvar express_server = '/react/content';\n\t\tfetch(express_server, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Success:', data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t<RichEditorExample\n\t\t\t\t\t\tmy_func={this.saving_function}\n\t\t\t\t\t\teditorState={this.state.editorState}\n\t\t\t\t\t\traw_state={this.raw_state}\n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\thandleBeforeInput={this._handleBeforeInput}\n\t\t\t\t\t\thandlePastedText={this._handlePastedText}\n\t\t\t\t\t\tref={this.myRef}\n\t\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<br />\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport './style.css';\nimport Manga from './manga';\nimport MyEditor from './editor';\nimport Btn from './button';\nimport { Editor } from 'draft-js';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\t\n\t}\n\n\t_manga() {\n\t\trender(<Manga />, document.getElementById('root'))\n\t}\n\n\t_editor() {\n\t\trender(<MyEditor />, document.getElementById('root'))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t<Btn\n\t\t\t\t\t\t_onClick={this._manga}\n\t\t\t\t\t\t_text={'Manga Downloader'}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Btn\n\t\t\t\t\t\t_onClick={this._editor}\n\t\t\t\t\t\t_text={'Editor'}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<br />\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Base extends Component {\n\tconstructor() {\n\t\tsuper()\t\n\t}\n\n\t_back() {\n\t\trender(<App />, document.getElementById('root'))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t<Btn\n\t\t\t\t\t\t_onClick={this._back}\n\t\t\t\t\t\t_icon={'undo'}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<br />\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Head extends Component {\n\tconstructor() {\n\t\tsuper()\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"/nature.png\"\n\t\t\t\t\t\theight='100px'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nrender([<Head />], document.getElementById('head'));\nrender([<App />], document.getElementById('root'));\nrender([<Base />], document.getElementById('base'));"],"sourceRoot":""}