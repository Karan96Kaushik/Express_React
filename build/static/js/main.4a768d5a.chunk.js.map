{"version":3,"sources":["diag_login.js","mui_button.js","mui_input.js","manga.js","getdata.js","draft.js","editor.js","_top_bar.js","nav_bar.js","index.js"],"names":["emails","useStyles","makeStyles","avatar","backgroundColor","blue","color","SimpleDialog","props","classes","onClose","selectedValue","open","handleListItemClick","value","global","account","aria-labelledby","id","map","email","button","onClick","key","className","primary","autoFocus","theme","root","margin","spacing","ContainedButtons","Button","_onClick","variant","_text","boot","width","textAlign","borderColor","fontSize","borderBottomColor","overrides","MuiInput","underline","borderBottom","BasicTextFields","useState","TextField","onChange","_onChange","spellCheck","label","App","Component","_changed","state","_value","target","_downlaod","bind","this","data","fname","fetch","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","serialize","method","then","response","json","console","log","catch","error","href","src","height","hasCommandModifier","KeyBindingUtil","myKeyBindingFn","e","keyCode","getDefaultKeyBinding","RichEditorExample","editorState","contentState","getCurrentContent","saveContent","setState","debounce","content","window","localStorage","setItem","JSON","stringify","convertToRaw","_getLengthOfSelectedText","currentSelection","getSelection","length","isCollapsed","currentContent","startKey","getStartKey","endKey","getEndKey","startBlock","getIsBackward","getBlockMap","getBlockForKey","endBlock","isStartAndEndBlockAreTheSame","startBlockTextLength","getLength","startSelectedTextLength","getStartOffset","endSelectedTextLength","getEndOffset","keyAfterEnd","getKeyAfter","currentKey","_handleBeforeInput","getPlainText","MAX_LENGTH","_handlePastedText","pastedText","currentContentLength","selectedTextLength","my_func","raw_state","EditorState","createWithContent","convertFromRaw","parse","createEmpty","focus","refs","editor","handleKeyCommand","onTab","_onTab","toggleBlockType","type","_toggleBlockType","toggleInlineStyle","style","_toggleInlineStyle","command","raw_content","newState","RichUtils","blockType","inlineStyle","hasText","first","getType","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","placeholder","keyBindingFn","ref","React","CODE","fontFamily","padding","block","StyleButton","preventDefault","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","getItem","headers","body","myRef","current","set_editor","name","createRef","saving_function","handleBeforeInput","handlePastedText","createStyles","flexGrow","background","menuButton","marginRight","title","ButtonAppBar","setOpen","setSelectedValue","menu_onClick","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","login","list","fullList","paper","TemporaryDrawer","list_comps","comps","top","left","bottom","right","toggleDrawer","anchor","event","Fragment","Drawer","clsx","role","onKeyDown","Divider","List","index","ListItem","ListItemIcon","_icon","ListItemText","render","document","getElementById","Head","NavBar","buttons","_manga_click","ImportContacts","_editor_click","Edit","_login"],"mappings":"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","file":"static/js/main.4a768d5a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport { blue } from '@material-ui/core/colors';\n\nconst emails = ['Karan', 'Nandita'];\nconst useStyles = makeStyles({\n\tavatar: {\n\t\tbackgroundColor: blue[100],\n\t\tcolor: blue[600],\n\t},\n});\n\nfunction SimpleDialog(props) {\n\tconst classes = useStyles();\n\tconst { onClose, selectedValue, open } = props;\n\n\tconst handleClose = () => {\n\t\tonClose(selectedValue);\n\t\tglobal.account = selectedValue\n\t};\n\n\tconst handleListItemClick = (value) => {\n\t\tonClose(value);\n\t\tglobal.account = value\n\t};\n\n\treturn (\n\t\t<Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n\t\t\t<DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n\t\t\t<List>\n\t\t\t\t{emails.map((email) => (\n\t\t\t\t\t<ListItem button onClick={() => handleListItemClick(email)} key={email}>\n\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t\t\t<PersonIcon />\n\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t<ListItemText primary={email} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\n\t\t\t\t<ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t<Avatar>\n\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t<ListItemText primary=\"Add account\" />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</Dialog>\n\t);\n}\n\nSimpleDialog.propTypes = {\n\tonClose: PropTypes.func.isRequired,\n\topen: PropTypes.bool.isRequired,\n\tselectedValue: PropTypes.string.isRequired,\n};\n\nexport default SimpleDialog","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            backgroundColor: '#d9d9d9',\n            color: 'black',\n            margin: theme.spacing(1),\n        },\n    },\n    button: {\n        '&:hover': {\n            backgroundColor: 'grey',\n        },\n    },\n}));\n\nexport default function ContainedButtons(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Button className={classes.button} onClick={props._onClick} variant=\"contained\" color=\"primary\">\n                {props._text}\n      </Button>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n\tboot: {\n\t\t'& > *': {\n\t\t\tmargin: theme.spacing(1),\n\t\t\twidth: '25ch',\n\t\t\tcolor: 'white',\n\t\t\ttextAlign: 'left',\n\t\t\tborderColor: 'yellow'\n\t\t},\n\t\t'& label': {\n\t\t\tcolor: 'grey',\n\t\t\tfontSize: '10px'\n\t\t},\n\t\t'& label.Mui-focused': {\n\t\t\tcolor: 'white',\n\t\t},\n\t\t'& .MuiInput-underline': {\n\t\t\tborderBottomColor: 'yellow',\n\t\t},\n\t\t'& .MuiInput-underline:after': {\n\t\t\tborderBottomColor: 'white',\n\t\t},\n\t},\n\toverrides: {\n\t\tMuiInput: {\n\t\t  underline: {\n\t\t\t\"&:before\": {\n\t\t\t  borderBottom: `1px solid ${'grey'}`\n\t\t\t}\n\t\t  }\n\t\t}\n\t  }\n}));\n\nexport default function BasicTextFields(props) {\n\tconst classes = useStyles();\n\tconst [_value, setValue] = useState('');\n\n\treturn (\n\t\t<TextField onChange={props._onChange} spellCheck={false} className={classes.boot} id=\"custom-css-standard-input\" label=\"Link\" />\n\t);\n}","import '@progress/kendo-theme-default/dist/all.css';\nimport React, { Component } from 'react';\nimport './style.css';\n\nimport Btn from './mui_button';\nimport Inp from './mui_input';\nimport GetData from './getdata';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._value = ''\n\t\tthis._downlaod = this._downlaod.bind(this);\n\t}\n\n\t_changed = (state) => {\n\t\tthis._value = (state.target.value);\n\t}\n\n\t_downlaod() {\n\t\tvar val = this._value\n\t\tvar data = {\n\t\t\tfname: this._value\n\t\t}\n\n\t\tfunction serialize(obj) {\n\t\t\tvar str = [];\n\t\t\tfor (var p in obj)\n\t\t\t  if (obj.hasOwnProperty(p)) {\n\t\t\t\tstr.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n\t\t\t  }\n\t\t\treturn str.join(\"&\");\n\t\t  }\n\n\n\t\tfetch('http://creepyfuck.tech/down?' + serialize(data), {\n\t\t\tmethod: 'POST',\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Success:', data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* <img src='/comic.png' height='100px' /> */}\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t<Inp\n\t\t\t\t\t\t_onChange={this._changed}\n\t\t\t\t\t/>\n\t\t\t\t\t<Btn \n\t\t\t\t\t\t_onClick={this._downlaod}\n\t\t\t\t\t\t_text={'Download'}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<a href='http://creepyfuck.tech/Manga/'>\n\t\t\t\t\t\t<img src='/react/comic.png' height='50px' />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\n\t\t\t\t<br />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App","import React, { Component } from 'react';\r\nimport { EditorState, Editor, convertToRaw, convertFromRaw } from 'draft-js';\r\n\r\nclass GetData extends Component{\r\n\r\n\r\nconstructor(props){\r\n  super(props)\r\n  this.state = {\r\n    articleData: []\r\n  }\r\nthis.article=this.article.bind(this);\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n\r\nlet getRawData = JSON.parse(JSON.stringify((window.localStorage.getItem('content'))));\r\n\r\nlet rawData= JSON.parse(getRawData);\r\n\r\nconsole.log(rawData.blocks)\r\n\r\n  //if(rawData){\r\n    this.setState({\r\n      articleData: rawData.blocks\r\n    })\r\n  //}\r\n\r\n console.log(this.state.articleData)   \r\n\r\n}\r\n\r\narticle=(data)=>{\r\n  console.log('asdada');\r\n  data.map(item => {\r\n    return <h1>hello</h1>;\r\n  })\r\n\r\n}\r\n\r\n  render(){\r\n\r\n    if (!this.state.articleData) {\r\n      return (\r\n        <h3 className=\"loading\">Loading...</h3>\r\n      );\r\n    }\r\n  \r\n    return(\r\n      <div>\r\n        {this.article(this.state.articleData)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetData;","import React, { Component } from 'react';\r\nimport 'draft-js/dist/Draft.css';\r\nimport debounce from 'lodash/debounce';\r\nimport {\r\n\tEditor,\r\n\tEditorState,\r\n\tRichUtils,\r\n\tconvertFromRaw,\r\n\tconvertToRaw,\r\n\tgetDefaultKeyBinding,\r\n\tKeyBindingUtil\r\n} from 'draft-js';\r\n\r\nconst { hasCommandModifier } = KeyBindingUtil;\r\n\r\nfunction myKeyBindingFn(e: SyntheticKeyboardEvent): string {\r\n\tif (e.keyCode === 83 /* `S` key */ && hasCommandModifier(e)) {\r\n\t\treturn 'myeditor-save';\r\n\t}\r\n\treturn getDefaultKeyBinding(e);\r\n}\r\n\r\nconst MAX_LENGTH = 10;\r\n\r\nclass RichEditorExample extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tif (props.my_func) {\r\n\t\t\tthis.my_func = props.my_func\r\n\t\t}\r\n\r\n\t\tconsole.log(props.raw_state)\r\n\r\n\t\tif (props.raw_state) {\r\n\t\t\tconsole.log('Raw State Prop present', props.raw_state)\r\n\t\t\tthis.state = {\r\n\t\t\t\teditorState: EditorState.createWithContent(convertFromRaw(JSON.parse(props.raw_state)))\r\n\t\t\t};\r\n\t\t} else {\r\n\r\n\t\t\tthis.state = {\r\n\t\t\t\teditorState: EditorState.createEmpty()\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis._getLengthOfSelectedText = this._getLengthOfSelectedText.bind(this);\r\n\t\tthis._handleBeforeInput = this._handleBeforeInput.bind(this);\r\n\r\n\t\tthis.focus = () => this.refs.editor.focus();\r\n\r\n\t\t//this.handleKeyCommand = (command) => this._handleKeyCommand(command);\r\n\t\tthis.handleKeyCommand = this.handleKeyCommand.bind(this);\r\n\t\tthis.onTab = (e) => this._onTab(e);\r\n\t\tthis.toggleBlockType = (type) => this._toggleBlockType(type);\r\n\t\tthis.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\r\n\t}\r\n\r\n\tset_editor(raw_state) {\r\n\t\tthis.setState({\r\n\t\t\teditorState: EditorState.createWithContent(convertFromRaw(JSON.parse(raw_state)))\r\n\t\t})\r\n\t}\r\n\r\n\tmy_func() {\r\n\t\tconsole.log('My Function is Running')\r\n\t}\r\n\r\n\thandleKeyCommand(command: string): DraftHandleValue {\r\n\t\tif (command === 'myeditor-save') {\r\n\t\t\t// Perform a request to save your contents, set\r\n\t\t\t// a new `editorState`, etc.\r\n\t\t\tvar raw_content = convertToRaw(this.state.editorState.getCurrentContent());\r\n\t\t\t//var raw_state = convertToRaw(this.state.editorState);\r\n\t\t\tvar _state = convertFromRaw(raw_content)\r\n\t\t\t// window.localStorage.setItem('content', JSON.stringify(raw_content));\r\n\t\t\t// this.state = {\r\n\t\t\t//     editorState: EditorState.createEmpty(),\r\n\t\t\t// };\r\n\r\n\t\t\tthis.my_func(JSON.stringify(raw_content))\r\n\r\n\t\t\tconsole.log('saved', raw_content)\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\t\treturn 'not-handled';\r\n\t}\r\n\r\n\tonChange = (editorState) => {\r\n\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t//console.log('content state', convertToRaw(contentState));\r\n\t\tthis.saveContent(contentState);\r\n\t\tthis.setState({ editorState });\r\n\t}\r\n\r\n\tsaveContent = debounce((content) => {\r\n\t\twindow.localStorage.setItem('content', JSON.stringify((convertToRaw(content))));\r\n\t}, 1000);\r\n\r\n\t_getLengthOfSelectedText = () => {\r\n\t\tconsole.log('say');\r\n\t\tconst currentSelection = this.state.editorState.getSelection();\r\n\t\tconst isCollapsed = currentSelection.isCollapsed();\r\n\r\n\t\tlet length = 0;\r\n\r\n\t\tif (!isCollapsed) {\r\n\t\t\tconst currentContent = this.state.editorState.getCurrentContent();\r\n\t\t\tconst startKey = currentSelection.getStartKey();\r\n\t\t\tconst endKey = currentSelection.getEndKey();\r\n\t\t\tconst isBackward = currentSelection.getIsBackward();\r\n\t\t\tconst blockMap = currentContent.getBlockMap();\r\n\t\t\tconst startBlock = currentContent.getBlockForKey(startKey);\r\n\t\t\tconst endBlock = currentContent.getBlockForKey(endKey);\r\n\t\t\tconst isStartAndEndBlockAreTheSame = startKey === endKey;\r\n\t\t\tconst startBlockTextLength = startBlock.getLength();\r\n\t\t\tconst endBlockTextLength = endBlock.getLength();\r\n\t\t\tconst startSelectedTextLength = startBlockTextLength - currentSelection.getStartOffset();\r\n\t\t\tconst endSelectedTextLength = currentSelection.getEndOffset();\r\n\t\t\tconst keyAfterEnd = currentContent.getKeyAfter(endKey);\r\n\r\n\t\t\tif (isStartAndEndBlockAreTheSame) {\r\n\t\t\t\tlength += currentSelection.getEndOffset() - currentSelection.getStartOffset();\r\n\t\t\t} else {\r\n\t\t\t\tlet currentKey = startKey;\r\n\t\t\t\tlet counter = 0;\r\n\r\n\t\t\t\twhile (currentKey && currentKey !== keyAfterEnd) {\r\n\t\t\t\t\tif (currentKey === startKey) {\r\n\t\t\t\t\t\tlength += startSelectedTextLength + 1;\r\n\t\t\t\t\t} else if (currentKey === endKey) {\r\n\t\t\t\t\t\tlength += endSelectedTextLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlength += currentContent.getBlockForKey(currentKey).getLength() + 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentKey = currentContent.getKeyAfter(currentKey);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn length;\r\n\t}\r\n\r\n\t_handleBeforeInput = () => {\r\n\t\tconsole.log('hello');\r\n\t\tconst currentContent = this.state.editorState.getCurrentContent();\r\n\t\tconst currentContentLength = currentContent.getPlainText('').length\r\n\r\n\t\tif (currentContentLength > MAX_LENGTH - 1) {\r\n\t\t\tconsole.log('you can type max ten characters');\r\n\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\t}\r\n\r\n\t_handlePastedText = (pastedText) => {\r\n\t\tconst currentContent = this.state.editorState.getCurrentContent();\r\n\t\tconst currentContentLength = currentContent.getPlainText('').length;\r\n\t\tconst selectedTextLength = this._getLengthOfSelectedText();\r\n\r\n\t\tif (currentContentLength + pastedText.length - selectedTextLength > MAX_LENGTH) {\r\n\t\t\tconsole.log('you can type max ten characters');\r\n\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\t}\r\n\r\n\t_handleKeyCommand(command) {\r\n\t\tconst { editorState } = this.state;\r\n\t\tconst newState = RichUtils.handleKeyCommand(editorState, command);\r\n\t\tif (newState) {\r\n\t\t\tthis.onChange(newState);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t_onTab(e) {\r\n\t\tconst maxDepth = 4;\r\n\t\tthis.onChange(RichUtils.onTab(e, this.state.editorState, maxDepth));\r\n\t}\r\n\r\n\t_toggleBlockType(blockType) {\r\n\t\tthis.onChange(\r\n\t\t\tRichUtils.toggleBlockType(\r\n\t\t\t\tthis.state.editorState,\r\n\t\t\t\tblockType\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t_toggleInlineStyle(inlineStyle) {\r\n\t\tif(inlineStyle == 'SAVE') {\r\n\t\t\tvar raw_content = convertToRaw(this.state.editorState.getCurrentContent());\r\n\t\t\tthis.my_func(JSON.stringify(raw_content))\r\n\t\t} else {\r\n\t\t\tthis.onChange(\r\n\t\t\t\tRichUtils.toggleInlineStyle(\r\n\t\t\t\t\tthis.state.editorState,\r\n\t\t\t\t\tinlineStyle\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { editorState } = this.state;\r\n\r\n\t\t// If the user changes block type before entering any text, we can\r\n\t\t// either style the placeholder or hide it. Let's just hide it now.\r\n\t\tlet className = 'RichEditor-editor';\r\n\t\tvar contentState = editorState.getCurrentContent();\r\n\t\tif (!contentState.hasText()) {\r\n\t\t\tif (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n\t\t\t\tclassName += ' RichEditor-hidePlaceholder';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (!this.state.editorState) {\r\n\t\t\treturn (\r\n\t\t\t\t<h3 className=\"loading\">Loading...</h3>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"RichEditor-root\">\r\n\t\t\t\t\t<BlockStyleControls\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tonToggle={this.toggleBlockType}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InlineStyleControls\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tonToggle={this.toggleInlineStyle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={className} style={{backgroundColor: 'white'}} onClick={this.focus}>\r\n\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\tblockStyleFn={getBlockStyle}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\t\thandleKeyCommand={this.handleKeyCommand}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\tonTab={this.onTab}\r\n\t\t\t\t\t\t\tplaceholder=\"Tell a story...\"\r\n\t\t\t\t\t\t\tkeyBindingFn={myKeyBindingFn}\r\n\t\t\t\t\t\t\tref=\"editor\"\r\n\t\t\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\t\t\tmy_func={this.my_func}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n\tCODE: {\r\n\t\tbackgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n\t\tfontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n\t\tfontSize: 12,\r\n\t\tpadding: 1,\r\n\t},\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n\tswitch (block.getType()) {\r\n\t\tcase 'blockquote': return 'RichEditor-blockquote';\r\n\t\tdefault: return null;\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass StyleButton extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.onToggle = (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.props.onToggle(this.props.style);\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet className = 'RichEditor-styleButton ui button';\r\n\t\tif (this.props.active) {\r\n\t\t\tclassName += ' RichEditor-activeButton';\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<span className={className} onMouseDown={this.onToggle}>\r\n\t\t\t\t{this.props.label}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nconst BLOCK_TYPES = [\r\n\t{ label: 'H1', style: 'header-one' },\r\n\t{ label: 'H2', style: 'header-two' },\r\n\t{ label: 'H3', style: 'header-three' },\r\n\t{ label: 'H4', style: 'header-four' },\r\n\t{ label: 'H5', style: 'header-five' },\r\n\t{ label: 'H6', style: 'header-six' },\r\n\t{ label: 'Blockquote', style: 'blockquote' },\r\n\t{ label: 'UL', style: 'unordered-list-item' },\r\n\t{ label: 'OL', style: 'ordered-list-item' },\r\n\t{ label: 'Code Block', style: 'code-block' },\r\n];\r\n\r\n\r\n\r\nconst BlockStyleControls = (props) => {\r\n\tconst { editorState } = props;\r\n\tconst selection = editorState.getSelection();\r\n\tconst blockType = editorState\r\n\t\t.getCurrentContent()\r\n\t\t.getBlockForKey(selection.getStartKey())\r\n\t\t.getType();\r\n\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{BLOCK_TYPES.map((type) =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={type.style === blockType}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nvar INLINE_STYLES = [\r\n\t{ label: 'Bold', style: 'BOLD' },\r\n\t{ label: 'Italic', style: 'ITALIC' },\r\n\t{ label: 'Underline', style: 'UNDERLINE' },\r\n\t{ label: 'Monospace', style: 'CODE' },\r\n\t{ label: 'Save', style: 'SAVE' },\r\n];\r\n\r\n\r\n\r\nconst InlineStyleControls = (props) => {\r\n\tvar currentStyle = props.editorState.getCurrentInlineStyle();\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{INLINE_STYLES.map(type =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={currentStyle.has(type.style)}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport default RichEditorExample;","import RichEditorExample from './draft';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.raw_state = '';\n\t\tvar _raw = ''\n\t\tvar express_server = '/react/getcontent';\n\n\t\tvar data = {\n\t\t\taccount: window.localStorage.getItem('sel_account'), \n\t\t}\n\n\t\tconsole.log('GET Data', data)\n\n\t\tfetch(express_server, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t}).then(response => response.json()).then(data => {\n\n\t\t\tif (data.raw_state) {\n\t\t\t\tthis.myRef.current.set_editor(data.raw_state)\n\t\t\t}\n\n\t\t}).catch((error) => {\n\t\t\tconsole.error('Error:', error);\n\t\t});\n\n\t\tthis.state = {\n\t\t\tname: 'React'\n\t\t};\n\n\t\tthis.myRef = React.createRef()\n\t}\n\n\tsaving_function(raw_state) {\n\t\tvar data = {\n\t\t\traw_state: raw_state,\n\t\t\taccount: window.localStorage.getItem('sel_account'), \n\t\t};\n\t\tconsole.log('Post Data', data)\n\t\t\n\t\tvar express_server = '/react/content';\n\t\tfetch(express_server, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Success:', data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<br />\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t<RichEditorExample\n\t\t\t\t\t\tmy_func={this.saving_function}\n\t\t\t\t\t\teditorState={this.state.editorState}\n\t\t\t\t\t\traw_state={this.raw_state}\n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\thandleBeforeInput={this._handleBeforeInput}\n\t\t\t\t\t\thandlePastedText={this._handlePastedText}\n\t\t\t\t\t\tref={this.myRef}\n\t\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<br />\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Drawer } from '@material-ui/core';\nimport Diag from './diag_login'\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tflexGrow: 1,\n\t\t\tbackground: '#d9d9d9',\n\t\t\ttextAlign: \"left\"\n\t\t},\n\t\tmenuButton: {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t\ttitle: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t}),\n);\n\nexport default function ButtonAppBar(props) {\n\tconst classes = useStyles();\n\tconst [open, setOpen] = React.useState(false);\n\tconst [selectedValue, setSelectedValue] = React.useState('');\n\n\tvar menu_onClick = props.menu_onClick;\n\n\tvar handleClose = (value) => {\n\t\tprops.login(value)\n\t\tsetOpen(false);\n\t    setSelectedValue(value);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<AppBar className={classes.root} position=\"static\" color=\"inherit\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton onClick={menu_onClick} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\tL, DO YOU KNOW?\n        \t\t\t</Typography>\n\t\t\t\t\t<Button onClick={() => {setOpen(true)}} style={{color: 'black'}} color=\"primary\">Login</Button>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Diag open={open} selectedValue={selectedValue} onClose={handleClose} />\n\t\t</div>\n\t);\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Top from './_top_bar';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    paper: {\n        background: '#d9d9d9'\n    },\n});\n\nexport default function TemporaryDrawer(props) {\n    const list_comps = props.comps\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor, list_comps) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <img\n                style={{padding: '10px'}}\n                src=\"/react/journey.png\"\n                height='75px'\n            />\n            <Divider />\n            <List >\n                {list_comps.map((button, index) => (\n                    <ListItem button onClick={() => { button._onClick(); toggleDrawer(anchor, true) }} key={button._text}>\n                        <ListItemIcon> {<button._icon />}</ListItemIcon>\n                        <ListItemText primary={button._text} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n        </div>\n    );\n\n    return (\n        <div>\n            <React.Fragment key={'bar'}>\n                <Top login={props.login} menu_onClick={toggleDrawer('bar', true)} />\n                <Drawer classes={{ paper: classes.paper }} anchor={'left'} open={state['bar']} onClose={toggleDrawer('bar', false)}>\n                    {list('bar', list_comps)}\n                </Drawer>\n            </React.Fragment>\n        </div>\n    );\n}\n","import '@progress/kendo-theme-default/dist/all.css';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport './style.css';\nimport Manga from './manga';\nimport MyEditor from './editor';\nimport Btn from './mui_button';\nimport { Editor } from 'draft-js';\nimport Top from './_top_bar';\nimport Nav from './nav_bar';\nimport { ImportContacts, Edit } from '@material-ui/icons';\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t}\n\n\t_manga() {\n\t\trender(<Manga />, document.getElementById('root'))\n\t}\n\n\t_editor() {\n\t\trender(<MyEditor />, document.getElementById('root'))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"/react/giphy1.webp\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '12em', /* width of container */\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t{/* <Btn\n\t\t\t\t\t\t_onClick={this._manga}\n\t\t\t\t\t\t_text={'Manga Downloader'}\n\t\t\t\t\t/>\n\t\t\t\t\t<Btn\n\t\t\t\t\t\t_onClick={this._editor}\n\t\t\t\t\t\t_text={'Editor'}\n\t\t\t\t\t/> */}\n\t\t\t\t</div>\n\n\t\t\t\t<br />\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Base extends Component {\n\tconstructor() {\n\t\tsuper()\n\t}\n\n\t_back() {\n\t\trender(<App />, document.getElementById('root'))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t<Btn\n\t\t\t\t\t\t_onClick={this._back}\n\t\t\t\t\t\t_icon={'undo'}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<br />\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Head extends Component {\n\tconstructor() {\n\t\tsuper()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"/react/nature.png\"\n\t\t\t\t\t\theight='100px'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass NavBar extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.buttons = [\n\t\t\t{\n\t\t\t\t_text: 'Manga Downloader',\n\t\t\t\t_onClick: this._manga_click,\n\t\t\t\t_icon: ImportContacts\n\t\t\t},\n\t\t\t{\n\t\t\t\t_text: 'Editor',\n\t\t\t\t_onClick: this._editor_click,\n\t\t\t\t_icon: Edit\n\t\t\t}\n\t\t]\n\n\t}\n\n\t_manga_click() {\n\t\trender([<Head />], document.getElementById('head'));\n\t\trender([<Manga />], document.getElementById('root'));\n\t}\n\n\t_editor_click() {\n\t\trender([<Head />], document.getElementById('head'));\n\t\trender([<MyEditor />], document.getElementById('root'));\n\t}\n\n\t_login(account) {\n\t\twindow.localStorage.setItem('sel_account', account);\n\t\tconsole.log('ACCOUNT SELECTED', account)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Nav comps={this.buttons} login={this._login} />\n\t\t);\n\t}\n}\n\nrender([<NavBar />], document.getElementById('top'));\n//render([<Head />], document.getElementById('head'));\nrender([<App />], document.getElementById('root'));\n//render([<Base />], document.getElementById('base'));"],"sourceRoot":""}