{"ast":null,"code":"var _jsxFileName = \"/home/karan/Documents/GitWorkSpace/Express_React/src/bookmarksipad.js\";\nimport '@progress/kendo-theme-default/dist/all.css';\nimport React, { Component } from 'react';\nimport './style.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Btn from './mui_button';\nimport Inp from './mui_input';\nimport GetData from './getdata';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core';\nvar grey400 = grey;\ngrey400.main = grey400[500];\nconst theme = createMuiTheme({\n  palette: {\n    //  primary: 'white',\n    secondary: grey400\n  },\n  status: {\n    danger: 'orange'\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleListItemClick = item => {\n      var win = window.open(item.link, '_blank');\n      win.focus();\n    };\n\n    this.state = {\n      list: [],\n      _bm_name: '',\n      _bm_val: ''\n    };\n    this.state.list.map(() => {\n      console.log(1);\n    });\n    this._get_list = this._get_list.bind(this);\n    this._add = this._add.bind(this);\n    this._changed_name = this._changed_name.bind(this);\n    this._changed_val = this._changed_val.bind(this);\n\n    this._get_list();\n  }\n\n  _get_list() {\n    console.log(this.state);\n    fetch('/react/getbookmarks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(response => response.json()).then(data => {\n      this.setState(prevState => ({\n        list: data\n      }));\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    fetch('http://localhost:4545/react/addbookmarks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      return /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"side-padding-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, data.map(bookmark => /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        style: {\n          color: 'white',\n          textSecondary: 'red'\n        },\n        onClick: () => this.handleListItemClick(bookmark),\n        key: bookmark,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        secondary: bookmark.link,\n        primary: bookmark.name,\n        secondaryTypographyProps: {\n          color: 'secondary'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 45\n        }\n      }))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      })));\n    }).catch(error => {\n      console.log('Error:', error);\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/Express_React/src/bookmarksipad.js"],"names":["React","Component","List","ListItem","ListItemAvatar","ListItemText","Btn","Inp","GetData","grey","makeStyles","ThemeProvider","createMuiTheme","grey400","main","theme","palette","secondary","status","danger","App","constructor","props","handleListItemClick","item","win","window","open","link","focus","state","list","_bm_name","_bm_val","map","console","log","_get_list","bind","_add","_changed_name","_changed_val","fetch","method","headers","body","JSON","stringify","then","response","json","data","setState","prevState","catch","error","render","bookmark","color","textSecondary","name"],"mappings":"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","sourcesContent":["import '@progress/kendo-theme-default/dist/all.css';\nimport React, { Component } from 'react';\nimport './style.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Btn from './mui_button';\nimport Inp from './mui_input';\nimport GetData from './getdata';\nimport grey from '@material-ui/core/colors/grey'\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core';\n\nvar grey400 = grey\ngrey400.main = grey400[500]\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\t//  primary: 'white',\n\t\tsecondary: grey400,\n\t},\n\tstatus: {\n\t\tdanger: 'orange',\n\t},\n});\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tlist: [],\n\t\t\t_bm_name: '',\n\t\t\t_bm_val: ''\n\t\t}\n\n\t\tthis.state.list.map(() => {\n\t\t\tconsole.log(1)\n\t\t})\n\n\t\tthis._get_list = this._get_list.bind(this)\n\t\tthis._add = this._add.bind(this)\n\t\tthis._changed_name = this._changed_name.bind(this)\n\t\tthis._changed_val = this._changed_val.bind(this)\n\t\tthis._get_list()\n\t}\n\n\t_get_list() {\n\t\tconsole.log(this.state)\n\n\t\tfetch('/react/getbookmarks', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({}),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\tlist: data\n\t\t\t\t}))\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\n\t}\n\n\thandleListItemClick = (item) => {\n\t\tvar win = window.open(item.link, '_blank');\n\t\twin.focus();\n\t}\n\n\trender() {\n\t\tconsole.log(this.state)\n\n        fetch('http://localhost:4545/react/addbookmarks', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Success:', data);\n                \n                return (\n                    <ThemeProvider theme={theme}>\n                        <div>\n                            {/* <img src='/comic.png' height='100px' /> */}\n                            <div className=\"side-padding-20\">\n                                <List>\n                                    {data.map((bookmark) => (\n                                        <ListItem button style={{ color: 'white', textSecondary: 'red' }} onClick={() => this.handleListItemClick(bookmark)} key={bookmark}>\n                                            <ListItemText secondary={bookmark.link} primary={bookmark.name} secondaryTypographyProps={{ color: 'secondary' }} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            </div>\n        \n                            <br />\n                        </div>\n                    </ThemeProvider>\n                );\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log('Error:', error);\n            });\n            \n\t\t\n\t}\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}