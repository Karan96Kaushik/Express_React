{"ast":null,"code":"import _slicedToArray from\"/home/karan/Documents/GitWorkSpace/Express_React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{makeStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import{PinDropSharp}from'@material-ui/icons';import Autocomplete from'@material-ui/lab/Autocomplete';var useStyles=makeStyles(function(theme){return{boot:{'& > *':{margin:theme.spacing(1),width:'25ch',color:'white',textAlign:'left',borderColor:'yellow'},'& label':{color:'grey',fontSize:'10px'},'& label.Mui-focused':{color:'white'},'& .MuiInput-underline':{borderBottomColor:'yellow'},'& .MuiInput-underline:after':{borderBottomColor:'white'}},overrides:{MuiInput:{underline:{\"&:before\":{borderBottom:\"1px solid \".concat('grey')}}}}};});export default function ComboBox(){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),list_values=_React$useState2[0],setList=_React$useState2[1];console.log(list_values);function _selected(target,option){console.log(option);}function _enterd_data(e){var data=e.target.value;if(data.length>3){//console.log(data)\nvar link='https://mangaowl.net/live_search/'+encodeURIComponent(data);console.log('LINK',link);fetch(link,{method:'GET'//mode: 'no-cors',\n}).then(function(response){return response.json();}).then(function(data){console.log('Success:',data);setList(data);}).catch(function(error){console.error('Error:',error);});//setList(values)\nconsole.log(list_values);}}return/*#__PURE__*/React.createElement(\"div\",{textAlign:'center'},/*#__PURE__*/React.createElement(Autocomplete,{id:\"combo-box-demo\",options:list_values,getOptionLabel:function getOptionLabel(option){return option.name;},clearOnBlur:false,onInputChange:_enterd_data,onChange:_selected,style:{width:300},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{textAlign:'center',value:\"Combo box\",variant:\"outlined\"}));}}));}","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/Express_React/src/search.js"],"names":["React","useState","makeStyles","TextField","PinDropSharp","Autocomplete","useStyles","theme","boot","margin","spacing","width","color","textAlign","borderColor","fontSize","borderBottomColor","overrides","MuiInput","underline","borderBottom","ComboBox","list_values","setList","console","log","_selected","target","option","_enterd_data","e","data","value","length","link","encodeURIComponent","fetch","method","then","response","json","catch","error","name","params"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,OAASC,YAAT,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CAEA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAACK,KAAD,QAAY,CACxCC,IAAI,CAAE,CACL,QAAS,CACRC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CAERC,KAAK,CAAE,MAFC,CAGRC,KAAK,CAAE,OAHC,CAIRC,SAAS,CAAE,MAJH,CAKRC,WAAW,CAAE,QALL,CADJ,CAQL,UAAW,CACVF,KAAK,CAAE,MADG,CAEVG,QAAQ,CAAE,MAFA,CARN,CAYL,sBAAuB,CACtBH,KAAK,CAAE,OADe,CAZlB,CAeL,wBAAyB,CACxBI,iBAAiB,CAAE,QADK,CAfpB,CAkBL,8BAA+B,CAC9BA,iBAAiB,CAAE,OADW,CAlB1B,CADkC,CAuBxCC,SAAS,CAAE,CACVC,QAAQ,CAAE,CACRC,SAAS,CAAE,CACZ,WAAY,CACVC,YAAY,qBAAe,MAAf,CADF,CADA,CADH,CADA,CAvB6B,CAAZ,EAAD,CAA5B,CAkCA,cAAe,SAASC,CAAAA,QAAT,EAAoB,qBAEHrB,KAAK,CAACC,QAAN,CAAe,EAAf,CAFG,oDAE3BqB,WAF2B,qBAEdC,OAFc,qBAIlCC,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAEA,QAASI,CAAAA,SAAT,CAAmBC,MAAnB,CAA2BC,MAA3B,CAAmC,CAClCJ,OAAO,CAACC,GAAR,CAAYG,MAAZ,EACA,CAED,QAASC,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACxB,GAAIC,CAAAA,IAAI,CAAGD,CAAC,CAACH,MAAF,CAASK,KAApB,CAEA,GAAGD,IAAI,CAACE,MAAL,CAAc,CAAjB,CAAoB,CACpB;AAEM,GAAIC,CAAAA,IAAI,CAAG,oCAAsCC,kBAAkB,CAACJ,IAAD,CAAnE,CACNP,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoBS,IAApB,EACAE,KAAK,CAAEF,IAAF,CAAQ,CACZG,MAAM,CAAE,KACR;AAFY,CAAR,CAAL,CAIEC,IAJF,CAIO,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAJf,EAKEF,IALF,CAKO,SAAAP,IAAI,CAAI,CACbP,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBM,IAAxB,EACAR,OAAO,CAACQ,IAAD,CAAP,CACA,CARF,EASEU,KATF,CASQ,SAACC,KAAD,CAAW,CACjBlB,OAAO,CAACkB,KAAR,CAAc,QAAd,CAAwBA,KAAxB,EACA,CAXF,EAaA;AAEAlB,OAAO,CAACC,GAAR,CAAYH,WAAZ,EACC,CAED,CAED,mBACE,2BAAK,SAAS,CAAE,QAAhB,eACA,oBAAC,YAAD,EACD,EAAE,CAAC,gBADF,CAED,OAAO,CAAEA,WAFR,CAGD,cAAc,CAAE,wBAACM,MAAD,QAAYA,CAAAA,MAAM,CAACe,IAAnB,EAHf,CAID,WAAW,CAAE,KAJZ,CAKD,aAAa,CAAEd,YALd,CAMD,QAAQ,CAAEH,SANT,CAOD,KAAK,CAAE,CAAEf,KAAK,CAAE,GAAT,CAPN,CAQD,WAAW,CAAE,qBAACiC,MAAD,qBAAY,oBAAC,SAAD,kBAAeA,MAAf,EAAuB,SAAS,CAAE,QAAlC,CAA4C,KAAK,CAAC,WAAlD,CAA8D,OAAO,CAAC,UAAtE,GAAZ,EARZ,EADA,CADF,CAcE","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { PinDropSharp } from '@material-ui/icons';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles((theme) => ({\n\tboot: {\n\t\t'& > *': {\n\t\t\tmargin: theme.spacing(1),\n\t\t\twidth: '25ch',\n\t\t\tcolor: 'white',\n\t\t\ttextAlign: 'left',\n\t\t\tborderColor: 'yellow'\n\t\t},\n\t\t'& label': {\n\t\t\tcolor: 'grey',\n\t\t\tfontSize: '10px'\n\t\t},\n\t\t'& label.Mui-focused': {\n\t\t\tcolor: 'white',\n\t\t},\n\t\t'& .MuiInput-underline': {\n\t\t\tborderBottomColor: 'yellow',\n\t\t},\n\t\t'& .MuiInput-underline:after': {\n\t\t\tborderBottomColor: 'white',\n\t\t},\n\t},\n\toverrides: {\n\t\tMuiInput: {\n\t\t  underline: {\n\t\t\t\"&:before\": {\n\t\t\t  borderBottom: `1px solid ${'grey'}`\n\t\t\t}\n\t\t  }\n\t\t}\n\t  }\n}));\n\nexport default function ComboBox() {\n\t\n\tconst [list_values, setList] = React.useState([]);\n\n\tconsole.log(list_values)\n\n\tfunction _selected(target, option) {\n\t\tconsole.log(option)\n\t}\n\n\tfunction _enterd_data(e) {\n\t\tvar data = e.target.value\n\n\t\tif(data.length > 3) {\n\t\t//console.log(data)\n\n        var link = 'https://mangaowl.net/live_search/' + encodeURIComponent(data)\n\t\tconsole.log('LINK', link)\n\t\tfetch( link, {\n\t\t\tmethod: 'GET',\n\t\t\t//mode: 'no-cors',\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Success:', data);\n\t\t\t\tsetList(data)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\n\t\t//setList(values)\n\n\t\tconsole.log(list_values)\n\t\t}\n\t\t\n\t}\n\n\treturn (\n\t  <div textAlign={'center'}>\n\t  <Autocomplete\n\t\tid=\"combo-box-demo\"\n\t\toptions={list_values}\n\t\tgetOptionLabel={(option) => option.name}\n\t\tclearOnBlur={false}\n\t\tonInputChange={_enterd_data}\n\t\tonChange={_selected}\n\t\tstyle={{ width: 300 }}\n\t\trenderInput={(params) => <TextField {...params} textAlign={'center'} value=\"Combo box\" variant=\"outlined\" />}\n\t  />\n\t  </div>\n\t);\n  }\n"]},"metadata":{},"sourceType":"module"}