{"ast":null,"code":"var _jsxFileName = \"/home/karan/Documents/GitWorkSpace/Express_React/src/nav_bar.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Top from './_top_bar';\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  },\n  paper: {\n    background: '#d9d9d9'\n  }\n});\nexport default function TemporaryDrawer(props) {\n  const list_comps = props.comps;\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = (anchor, list_comps) => /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: \"padding: 10px;\",\n    src: \"/nature.png\",\n    height: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, list_comps.map((button, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: () => {\n      button._onClick();\n\n      toggleDrawer(anchor, true);\n    },\n    key: button._text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \" \", /*#__PURE__*/React.createElement(button._icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: button._text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    key: 'bar',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Top, {\n    menu_onClick: toggleDrawer('bar', true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Drawer, {\n    classes: {\n      paper: classes.paper\n    },\n    anchor: 'left',\n    open: state['bar'],\n    onClose: toggleDrawer('bar', false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, list('bar', list_comps))));\n}","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/Express_React/src/nav_bar.js"],"names":["React","clsx","makeStyles","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","Top","useStyles","list","width","fullList","paper","background","TemporaryDrawer","props","list_comps","comps","classes","state","setState","useState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","map","button","index","_onClick","_text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Top from './_top_bar';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    paper: {\n        background: '#d9d9d9'\n    },\n});\n\nexport default function TemporaryDrawer(props) {\n    const list_comps = props.comps\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor, list_comps) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <img\n                style=\"padding: 10px;\"\n                src=\"/nature.png\"\n                height='50px'\n            />\n            <Divider />\n            <List >\n                {list_comps.map((button, index) => (\n                    <ListItem button onClick={() => { button._onClick(); toggleDrawer(anchor, true) }} key={button._text}>\n                        <ListItemIcon> {<button._icon />}</ListItemIcon>\n                        <ListItemText primary={button._text} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n        </div>\n    );\n\n    return (\n        <div>\n            <React.Fragment key={'bar'}>\n                <Top menu_onClick={toggleDrawer('bar', true)} />\n                <Drawer classes={{ paper: classes.paper }} anchor={'left'} open={state['bar']} onClose={toggleDrawer('bar', false)}>\n                    {list('bar', list_comps)}\n                </Drawer>\n            </React.Fragment>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}