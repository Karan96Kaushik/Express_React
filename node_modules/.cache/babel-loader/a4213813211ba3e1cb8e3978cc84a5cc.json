{"ast":null,"code":"\"use strict\";\n\nconst Regex = require('../helper/Regex');\n\nfunction isValidData(variable) {\n  if (typeof variable === \"undefined\") {\n    return false;\n  }\n\n  if (typeof variable === \"object\" && variable === null) {\n    return false;\n  }\n\n  return true;\n}\n\nexports.isString = function (variable) {\n  if (isValidData(variable) && typeof variable === \"string\" && variable.constructor.name === 'String') return true;\n  return false;\n};\n\nexports.isArray = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'Array') return true;\n  return false;\n};\n\nexports.isNumber = function (variable) {\n  if (isValidData(variable) && typeof variable === \"number\" && variable.constructor.name === 'Number') return true;\n  return false;\n};\n\nexports.isInt = function (variable) {\n  if (isValidData(variable) && typeof variable === \"number\" && variable.constructor.name === 'Number') {\n    if (String(variable) === \"Infinity\") return false;\n    return variable % 1 === 0;\n  }\n\n  return false;\n};\n\nexports.isFloat = function (variable) {\n  if (isValidData(variable) && typeof variable === \"number\" && variable.constructor.name === 'Number') {\n    if (String(variable) === \"Infinity\") return false;\n    return variable === variable && variable % 1 !== 0;\n  }\n\n  return false;\n};\n\nexports.isBigInt = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'BigInt') return true;\n  return false;\n};\n\nexports.isNull = function (variable) {\n  if (variable === null) return true;\n  return false;\n};\n\nexports.isUndefined = function (variable) {\n  if (variable === undefined) return true;\n  return false;\n};\n\nexports.isBuffer = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'Buffer') return true;\n  return false;\n};\n\nexports.isRegex = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'RegExp') return true;\n  return false;\n};\n\nexports.isObject = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'Object') return true;\n  return false;\n};\n\nexports.isBoolean = function (variable) {\n  if (variable === true || variable === false) return true;\n  return false;\n};\n\nexports.isFunction = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'Function') {\n    try {\n      var cls = /^class\\s+/.test(variable.toString().trim());\n\n      if (cls) {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  return false;\n};\n\nexports.isClass = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'Function') {\n    try {\n      var cls = /^class\\s+/.test(variable.toString().trim());\n\n      if (cls) {\n        return true;\n      }\n\n      return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  return false;\n};\n\nexports.isDate = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'Date') return true;\n  return false;\n};\n\nexports.isError = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'Error') return true;\n  return false;\n};\n\nexports.isSymbol = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'Symbol') return true;\n  return false;\n};\n\nexports.isPromise = function (variable) {\n  if (isValidData(variable) && variable.constructor.name === 'Promise') return true;\n  return false;\n};\n\nexports.isBase64 = function (variable) {\n  if (isValidData(variable) && typeof variable === \"string\" && variable.constructor.name === 'String') {\n    return Regex.base64.test(variable);\n  }\n\n  return false;\n};\n\nexports.isUrl = function (variable) {\n  if (isValidData(variable) && typeof variable === \"string\" && variable.constructor.name === 'String') {\n    if (Regex.validDomainReg.test(variable)) return true;\n    if (Regex.validIpUrlReg.test(variable)) return true;\n  }\n\n  return false;\n};\n\nexports.isPort = function (variable) {\n  if (isValidData(variable) && isNaN(variable) === false) {\n    variable = Number(variable);\n    return variable >= 1 && variable <= 65535;\n  }\n\n  return false;\n};\n\nexports.isEmail = function (variable) {\n  if (isValidData(variable) && typeof variable === \"string\" && variable.constructor.name === 'String') {\n    return Regex.validEmailReg.test(variable);\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/home/karansgs/Documents/githubWorkSpace/Express_React/node_modules/bvalid/lib/utils/ValidationProcess.js"],"names":["Regex","require","isValidData","variable","exports","isString","constructor","name","isArray","isNumber","isInt","String","isFloat","isBigInt","isNull","isUndefined","undefined","isBuffer","isRegex","isObject","isBoolean","isFunction","cls","test","toString","trim","err","isClass","isDate","isError","isSymbol","isPromise","isBase64","base64","isUrl","validDomainReg","validIpUrlReg","isPort","isNaN","Number","isEmail","validEmailReg"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst Regex = require('../helper/Regex');\n\nfunction isValidData(variable){\n    if(typeof variable === \"undefined\")\n    {\n        return false\n    }\n    if((typeof variable === \"object\") && (variable === null))\n    {\n        return false;\n    }\n    return true;\n}\n\nexports.isString = function(variable){\n    if(isValidData(variable) && (typeof variable === \"string\") && (variable.constructor.name === 'String')) return true;\n    return false;\n}\n\nexports.isArray = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'Array') return true;\n    return false;\n}\n\nexports.isNumber = function(variable){\n    if(isValidData(variable) && (typeof variable === \"number\") && (variable.constructor.name === 'Number')) return true;\n    return false;\n}\n\nexports.isInt = function(variable){\n    if(isValidData(variable) && (typeof variable === \"number\") && (variable.constructor.name === 'Number')){\n      if(String(variable) === \"Infinity\") return false;\n      return (variable % 1) === 0;\n    }\n    return false;\n}\n\nexports.isFloat = function(variable){\n    if(isValidData(variable) && (typeof variable === \"number\") && (variable.constructor.name === 'Number')){\n      if(String(variable) === \"Infinity\") return false;\n      return variable === variable && variable % 1 !== 0;\n    }\n    return false;\n}\n\nexports.isBigInt = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'BigInt') return true;\n    return false;\n}\n\nexports.isNull= function(variable){\n    if(variable === null) return true;\n    return false;\n}\n\nexports.isUndefined= function(variable){\n    if(variable === undefined) return true;\n    return false;\n}\n\nexports.isBuffer = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'Buffer') return true;\n    return false;\n}\n\nexports.isRegex = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'RegExp') return true;\n    return false;\n}\n\nexports.isObject = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'Object') return true;\n    return false;\n}\n\nexports.isBoolean = function(variable) {\n    if(variable === true || variable === false) return true;\n    return false;\n}\n\nexports.isFunction = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'Function'){\n        try{\n          var cls = /^class\\s+/.test(variable.toString().trim())\n          if(cls){return false}\n          return true;\n        }catch(err){return false}\n    }\n    return false;\n}\n\nexports.isClass = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'Function'){\n        try{\n          var cls = /^class\\s+/.test(variable.toString().trim())\n          if(cls){return true}\n          return false;\n        }catch(err){return false}\n    }\n    return false;\n}\n\nexports.isDate = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'Date') return true;\n    return false;\n}\n\nexports.isError = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'Error') return true;\n    return false;\n}\n\nexports.isSymbol = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'Symbol') return true;\n    return false;\n}\n\nexports.isPromise = function(variable){\n    if(isValidData(variable) && variable.constructor.name === 'Promise') return true;\n    return false;\n}\n\nexports.isBase64 = function(variable){\n    if(isValidData(variable) && (typeof variable === \"string\") && (variable.constructor.name === 'String')){\n      return Regex.base64.test(variable);\n    }\n    return false;\n}\n\nexports.isUrl = function(variable){\n    if(isValidData(variable) && (typeof variable === \"string\") && (variable.constructor.name === 'String')){\n        if(Regex.validDomainReg.test(variable)) return true;\n        if(Regex.validIpUrlReg.test(variable)) return true;\n    }\n    return false;\n}\n\nexports.isPort = function(variable){\n    if(isValidData(variable) && isNaN(variable) === false){\n      variable = Number(variable);\n      return (variable >= 1 && variable <= 65535)\n    }\n    return false;\n}\n\nexports.isEmail = function(variable){\n    if(isValidData(variable) && (typeof variable === \"string\") && (variable.constructor.name === 'String')){\n      return Regex.validEmailReg.test(variable);\n    }\n    return false;\n}\n"]},"metadata":{},"sourceType":"script"}