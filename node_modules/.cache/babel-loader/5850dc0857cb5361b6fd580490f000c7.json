{"ast":null,"code":"var _jsxFileName = \"/home/karan/Documents/GitWorkSpace/Express_React/src/_top_bar.js\";\nimport React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Diag from './diag_login';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1,\n    background: '#d9d9d9',\n    textAlign: \"left\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState('');\n  var account;\n\n  if (window.localStorage.getItem('sel_account') === '') {\n    account = 'Login';\n  }\n\n  const [sel_account, setValue] = React.useState(account);\n  var menu_onClick = props.menu_onClick;\n\n  var handleClose = value => {\n    if (value === sel_account) {\n      setSelectedValue(value);\n      setValue(value);\n      props.login(value);\n      console.log(\"LoGIN\", selectedValue);\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.root,\n    position: \"static\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: menu_onClick,\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }, \"L, DO YOU KNOW?\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      setOpen(true);\n    },\n    style: {\n      color: 'black'\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, sel_account))), /*#__PURE__*/React.createElement(Diag, {\n    open: open,\n    selectedValue: selectedValue,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/Express_React/src/_top_bar.js"],"names":["React","createStyles","makeStyles","Theme","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","Diag","useStyles","theme","root","flexGrow","background","textAlign","menuButton","marginRight","spacing","title","ButtonAppBar","props","classes","open","setOpen","useState","selectedValue","setSelectedValue","account","window","localStorage","getItem","sel_account","setValue","menu_onClick","handleClose","value","login","console","log","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Diag from './diag_login'\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tflexGrow: 1,\n\t\t\tbackground: '#d9d9d9',\n\t\t\ttextAlign: \"left\"\n\t\t},\n\t\tmenuButton: {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t\ttitle: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t}),\n);\n\nexport default function ButtonAppBar(props) {\n\tconst classes = useStyles();\n\tconst [open, setOpen] = React.useState(false);\n\tconst [selectedValue, setSelectedValue] = React.useState('');\n\n\tvar account;\n\n\tif(window.localStorage.getItem('sel_account') === '') {\n\t\taccount = 'Login'\n\t}\n\n\tconst [sel_account, setValue] = React.useState(account);\n\n\tvar menu_onClick = props.menu_onClick;\n\n\tvar handleClose = (value) => {\n\t\tif(value === sel_account) {\n\t\t\tsetSelectedValue(value);\n\t\t\tsetValue(value)\n\t\t\tprops.login(value)\n\t\t\tconsole.log(\"LoGIN\", selectedValue)\n\t\t}\n\t\tsetOpen(false);\n\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<AppBar className={classes.root} position=\"static\" color=\"inherit\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton onClick={menu_onClick} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\tL, DO YOU KNOW?\n        \t\t\t</Typography>\n\t\t\t\t\t<Button onClick={() => {setOpen(true)}} style={{color: 'black'}} color=\"primary\">{sel_account}</Button>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Diag open={open} selectedValue={selectedValue} onClose={handleClose} />\n\t\t</div>\n\t);\n}"]},"metadata":{},"sourceType":"module"}