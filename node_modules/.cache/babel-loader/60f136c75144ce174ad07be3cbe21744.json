{"ast":null,"code":"import _classCallCheck from\"/home/karan/Documents/GitWorkSpace/Express_React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/karan/Documents/GitWorkSpace/Express_React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/karan/Documents/GitWorkSpace/Express_React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/karan/Documents/GitWorkSpace/Express_React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/karan/Documents/GitWorkSpace/Express_React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'draft-js/dist/Draft.css';import debounce from'lodash/debounce';import{Editor,EditorState,RichUtils,convertFromRaw,convertToRaw,getDefaultKeyBinding,KeyBindingUtil}from'draft-js';var hasCommandModifier=KeyBindingUtil.hasCommandModifier;function myKeyBindingFn(e){if(e.keyCode===83/* `S` key */&&hasCommandModifier(e)){return'myeditor-save';}return getDefaultKeyBinding(e);}var MAX_LENGTH=10;var RichEditorExample=/*#__PURE__*/function(_React$Component){_inherits(RichEditorExample,_React$Component);var _super=_createSuper(RichEditorExample);function RichEditorExample(props){var _this;_classCallCheck(this,RichEditorExample);_this=_super.call(this,props);_this.onChange=function(editorState){var contentState=editorState.getCurrentContent();//console.log('content state', convertToRaw(contentState));\n_this.saveContent(contentState);_this.setState({editorState:editorState});};_this.saveContent=debounce(function(content){window.localStorage.setItem('content',JSON.stringify(convertToRaw(content)));},1000);_this._getLengthOfSelectedText=function(){console.log('say');var currentSelection=_this.state.editorState.getSelection();var isCollapsed=currentSelection.isCollapsed();var length=0;if(!isCollapsed){var currentContent=_this.state.editorState.getCurrentContent();var startKey=currentSelection.getStartKey();var endKey=currentSelection.getEndKey();var isBackward=currentSelection.getIsBackward();var blockMap=currentContent.getBlockMap();var startBlock=currentContent.getBlockForKey(startKey);var endBlock=currentContent.getBlockForKey(endKey);var isStartAndEndBlockAreTheSame=startKey===endKey;var startBlockTextLength=startBlock.getLength();var endBlockTextLength=endBlock.getLength();var startSelectedTextLength=startBlockTextLength-currentSelection.getStartOffset();var endSelectedTextLength=currentSelection.getEndOffset();var keyAfterEnd=currentContent.getKeyAfter(endKey);if(isStartAndEndBlockAreTheSame){length+=currentSelection.getEndOffset()-currentSelection.getStartOffset();}else{var currentKey=startKey;var counter=0;while(currentKey&&currentKey!==keyAfterEnd){if(currentKey===startKey){length+=startSelectedTextLength+1;}else if(currentKey===endKey){length+=endSelectedTextLength;}else{length+=currentContent.getBlockForKey(currentKey).getLength()+1;}currentKey=currentContent.getKeyAfter(currentKey);};}}return length;};_this._handleBeforeInput=function(){console.log('hello');var currentContent=_this.state.editorState.getCurrentContent();var currentContentLength=currentContent.getPlainText('').length;if(currentContentLength>MAX_LENGTH-1){console.log('you can type max ten characters');return'handled';}};_this._handlePastedText=function(pastedText){var currentContent=_this.state.editorState.getCurrentContent();var currentContentLength=currentContent.getPlainText('').length;var selectedTextLength=_this._getLengthOfSelectedText();if(currentContentLength+pastedText.length-selectedTextLength>MAX_LENGTH){console.log('you can type max ten characters');return'handled';}};if(props.my_func){_this.my_func=props.my_func;}console.log(props.raw_state);if(props.raw_state){console.log('Raw State Prop present',props.raw_state);_this.state={editorState:EditorState.createWithContent(convertFromRaw(JSON.parse(props.raw_state)))};}else{_this.state={editorState:EditorState.createEmpty()};}_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));_this._getLengthOfSelectedText=_this._getLengthOfSelectedText.bind(_assertThisInitialized(_this));_this._handleBeforeInput=_this._handleBeforeInput.bind(_assertThisInitialized(_this));_this.focus=function(){return _this.refs.editor.focus();};//this.handleKeyCommand = (command) => this._handleKeyCommand(command);\n_this.handleKeyCommand=_this.handleKeyCommand.bind(_assertThisInitialized(_this));_this.onTab=function(e){return _this._onTab(e);};_this.toggleBlockType=function(type){return _this._toggleBlockType(type);};_this.toggleInlineStyle=function(style){return _this._toggleInlineStyle(style);};return _this;}_createClass(RichEditorExample,[{key:\"set_editor\",value:function set_editor(raw_state){this.setState({editorState:EditorState.createWithContent(convertFromRaw(JSON.parse(raw_state)))});}},{key:\"my_func\",value:function my_func(){console.log('My Function is Running');}},{key:\"handleKeyCommand\",value:function handleKeyCommand(command){if(command==='myeditor-save'){// Perform a request to save your contents, set\n// a new `editorState`, etc.\nvar raw_content=convertToRaw(this.state.editorState.getCurrentContent());//var raw_state = convertToRaw(this.state.editorState);\nvar _state=convertFromRaw(raw_content);// window.localStorage.setItem('content', JSON.stringify(raw_content));\n// this.state = {\n//     editorState: EditorState.createEmpty(),\n// };\nthis.my_func(JSON.stringify(raw_content));console.log('saved',raw_content);return'handled';}return'not-handled';}},{key:\"_handleKeyCommand\",value:function _handleKeyCommand(command){var editorState=this.state.editorState;var newState=RichUtils.handleKeyCommand(editorState,command);if(newState){this.onChange(newState);return true;}return false;}},{key:\"_onTab\",value:function _onTab(e){var maxDepth=4;this.onChange(RichUtils.onTab(e,this.state.editorState,maxDepth));}},{key:\"_toggleBlockType\",value:function _toggleBlockType(blockType){this.onChange(RichUtils.toggleBlockType(this.state.editorState,blockType));}},{key:\"_toggleInlineStyle\",value:function _toggleInlineStyle(inlineStyle){if(inlineStyle=='SAVE'){var raw_content=convertToRaw(this.state.editorState.getCurrentContent());this.my_func(JSON.stringify(raw_content));}else{this.onChange(RichUtils.toggleInlineStyle(this.state.editorState,inlineStyle));}}},{key:\"render\",value:function render(){var editorState=this.state.editorState;// If the user changes block type before entering any text, we can\n// either style the placeholder or hide it. Let's just hide it now.\nvar className='RichEditor-editor';var contentState=editorState.getCurrentContent();if(!contentState.hasText()){if(contentState.getBlockMap().first().getType()!=='unstyled'){className+=' RichEditor-hidePlaceholder';}}if(!this.state.editorState){return/*#__PURE__*/React.createElement(\"h3\",{className:\"loading\"},\"Loading...\");}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"RichEditor-root\"},/*#__PURE__*/React.createElement(BlockStyleControls,{editorState:editorState,onToggle:this.toggleBlockType}),/*#__PURE__*/React.createElement(InlineStyleControls,{editorState:editorState,onToggle:this.toggleInlineStyle}),/*#__PURE__*/React.createElement(\"div\",{className:className,style:{backgroundColor:'white'},onClick:this.focus},/*#__PURE__*/React.createElement(Editor,{blockStyleFn:getBlockStyle,customStyleMap:styleMap,editorState:editorState,handleKeyCommand:this.handleKeyCommand,onChange:this.onChange,onTab:this.onTab,placeholder:\"Tell a story...\",keyBindingFn:myKeyBindingFn,ref:\"editor\",spellCheck:true,my_func:this.my_func}))));}}]);return RichEditorExample;}(React.Component);// Custom overrides for \"code\" style.\nvar styleMap={CODE:{backgroundColor:'rgba(0, 0, 0, 0.05)',fontFamily:'\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',fontSize:12,padding:1}};function getBlockStyle(block){switch(block.getType()){case'blockquote':return'RichEditor-blockquote';default:return null;}}var StyleButton=/*#__PURE__*/function(_React$Component2){_inherits(StyleButton,_React$Component2);var _super2=_createSuper(StyleButton);function StyleButton(){var _this2;_classCallCheck(this,StyleButton);_this2=_super2.call(this);_this2.onToggle=function(e){e.preventDefault();_this2.props.onToggle(_this2.props.style);};return _this2;}_createClass(StyleButton,[{key:\"render\",value:function render(){var className='RichEditor-styleButton ui button';if(this.props.active){className+=' RichEditor-activeButton';}return/*#__PURE__*/React.createElement(\"span\",{className:className,onMouseDown:this.onToggle},this.props.label);}}]);return StyleButton;}(React.Component);var BLOCK_TYPES=[{label:'H1',style:'header-one'},{label:'H2',style:'header-two'},{label:'H3',style:'header-three'},{label:'H4',style:'header-four'},{label:'H5',style:'header-five'},{label:'H6',style:'header-six'},{label:'Blockquote',style:'blockquote'},{label:'UL',style:'unordered-list-item'},{label:'OL',style:'ordered-list-item'},{label:'Code Block',style:'code-block'}];var BlockStyleControls=function BlockStyleControls(props){var editorState=props.editorState;var selection=editorState.getSelection();var blockType=editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();return/*#__PURE__*/React.createElement(\"div\",{className:\"RichEditor-controls\"},BLOCK_TYPES.map(function(type){return/*#__PURE__*/React.createElement(StyleButton,{key:type.label,active:type.style===blockType,label:type.label,onToggle:props.onToggle,style:type.style});}));};var INLINE_STYLES=[{label:'Bold',style:'BOLD'},{label:'Italic',style:'ITALIC'},{label:'Underline',style:'UNDERLINE'},{label:'Monospace',style:'CODE'},{label:'Save',style:'SAVE'}];var InlineStyleControls=function InlineStyleControls(props){var currentStyle=props.editorState.getCurrentInlineStyle();return/*#__PURE__*/React.createElement(\"div\",{className:\"RichEditor-controls\"},INLINE_STYLES.map(function(type){return/*#__PURE__*/React.createElement(StyleButton,{key:type.label,active:currentStyle.has(type.style),label:type.label,onToggle:props.onToggle,style:type.style});}));};export default RichEditorExample;","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/Express_React/src/draft.js"],"names":["React","Component","debounce","Editor","EditorState","RichUtils","convertFromRaw","convertToRaw","getDefaultKeyBinding","KeyBindingUtil","hasCommandModifier","myKeyBindingFn","e","keyCode","MAX_LENGTH","RichEditorExample","props","onChange","editorState","contentState","getCurrentContent","saveContent","setState","content","window","localStorage","setItem","JSON","stringify","_getLengthOfSelectedText","console","log","currentSelection","state","getSelection","isCollapsed","length","currentContent","startKey","getStartKey","endKey","getEndKey","isBackward","getIsBackward","blockMap","getBlockMap","startBlock","getBlockForKey","endBlock","isStartAndEndBlockAreTheSame","startBlockTextLength","getLength","endBlockTextLength","startSelectedTextLength","getStartOffset","endSelectedTextLength","getEndOffset","keyAfterEnd","getKeyAfter","currentKey","counter","_handleBeforeInput","currentContentLength","getPlainText","_handlePastedText","pastedText","selectedTextLength","my_func","raw_state","createWithContent","parse","createEmpty","bind","focus","refs","editor","handleKeyCommand","onTab","_onTab","toggleBlockType","type","_toggleBlockType","toggleInlineStyle","style","_toggleInlineStyle","command","raw_content","_state","newState","maxDepth","blockType","inlineStyle","className","hasText","first","getType","backgroundColor","getBlockStyle","styleMap","CODE","fontFamily","fontSize","padding","block","StyleButton","onToggle","preventDefault","active","label","BLOCK_TYPES","BlockStyleControls","selection","map","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport 'draft-js/dist/Draft.css';\r\nimport debounce from 'lodash/debounce';\r\nimport {\r\n\tEditor,\r\n\tEditorState,\r\n\tRichUtils,\r\n\tconvertFromRaw,\r\n\tconvertToRaw,\r\n\tgetDefaultKeyBinding,\r\n\tKeyBindingUtil\r\n} from 'draft-js';\r\n\r\nconst { hasCommandModifier } = KeyBindingUtil;\r\n\r\nfunction myKeyBindingFn(e: SyntheticKeyboardEvent): string {\r\n\tif (e.keyCode === 83 /* `S` key */ && hasCommandModifier(e)) {\r\n\t\treturn 'myeditor-save';\r\n\t}\r\n\treturn getDefaultKeyBinding(e);\r\n}\r\n\r\nconst MAX_LENGTH = 10;\r\n\r\nclass RichEditorExample extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tif (props.my_func) {\r\n\t\t\tthis.my_func = props.my_func\r\n\t\t}\r\n\r\n\t\tconsole.log(props.raw_state)\r\n\r\n\t\tif (props.raw_state) {\r\n\t\t\tconsole.log('Raw State Prop present', props.raw_state)\r\n\t\t\tthis.state = {\r\n\t\t\t\teditorState: EditorState.createWithContent(convertFromRaw(JSON.parse(props.raw_state)))\r\n\t\t\t};\r\n\t\t} else {\r\n\r\n\t\t\tthis.state = {\r\n\t\t\t\teditorState: EditorState.createEmpty()\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis._getLengthOfSelectedText = this._getLengthOfSelectedText.bind(this);\r\n\t\tthis._handleBeforeInput = this._handleBeforeInput.bind(this);\r\n\r\n\t\tthis.focus = () => this.refs.editor.focus();\r\n\r\n\t\t//this.handleKeyCommand = (command) => this._handleKeyCommand(command);\r\n\t\tthis.handleKeyCommand = this.handleKeyCommand.bind(this);\r\n\t\tthis.onTab = (e) => this._onTab(e);\r\n\t\tthis.toggleBlockType = (type) => this._toggleBlockType(type);\r\n\t\tthis.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\r\n\t}\r\n\r\n\tset_editor(raw_state) {\r\n\t\tthis.setState({\r\n\t\t\teditorState: EditorState.createWithContent(convertFromRaw(JSON.parse(raw_state)))\r\n\t\t})\r\n\t}\r\n\r\n\tmy_func() {\r\n\t\tconsole.log('My Function is Running')\r\n\t}\r\n\r\n\thandleKeyCommand(command: string): DraftHandleValue {\r\n\t\tif (command === 'myeditor-save') {\r\n\t\t\t// Perform a request to save your contents, set\r\n\t\t\t// a new `editorState`, etc.\r\n\t\t\tvar raw_content = convertToRaw(this.state.editorState.getCurrentContent());\r\n\t\t\t//var raw_state = convertToRaw(this.state.editorState);\r\n\t\t\tvar _state = convertFromRaw(raw_content)\r\n\t\t\t// window.localStorage.setItem('content', JSON.stringify(raw_content));\r\n\t\t\t// this.state = {\r\n\t\t\t//     editorState: EditorState.createEmpty(),\r\n\t\t\t// };\r\n\r\n\t\t\tthis.my_func(JSON.stringify(raw_content))\r\n\r\n\t\t\tconsole.log('saved', raw_content)\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\t\treturn 'not-handled';\r\n\t}\r\n\r\n\tonChange = (editorState) => {\r\n\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t//console.log('content state', convertToRaw(contentState));\r\n\t\tthis.saveContent(contentState);\r\n\t\tthis.setState({ editorState });\r\n\t}\r\n\r\n\tsaveContent = debounce((content) => {\r\n\t\twindow.localStorage.setItem('content', JSON.stringify((convertToRaw(content))));\r\n\t}, 1000);\r\n\r\n\t_getLengthOfSelectedText = () => {\r\n\t\tconsole.log('say');\r\n\t\tconst currentSelection = this.state.editorState.getSelection();\r\n\t\tconst isCollapsed = currentSelection.isCollapsed();\r\n\r\n\t\tlet length = 0;\r\n\r\n\t\tif (!isCollapsed) {\r\n\t\t\tconst currentContent = this.state.editorState.getCurrentContent();\r\n\t\t\tconst startKey = currentSelection.getStartKey();\r\n\t\t\tconst endKey = currentSelection.getEndKey();\r\n\t\t\tconst isBackward = currentSelection.getIsBackward();\r\n\t\t\tconst blockMap = currentContent.getBlockMap();\r\n\t\t\tconst startBlock = currentContent.getBlockForKey(startKey);\r\n\t\t\tconst endBlock = currentContent.getBlockForKey(endKey);\r\n\t\t\tconst isStartAndEndBlockAreTheSame = startKey === endKey;\r\n\t\t\tconst startBlockTextLength = startBlock.getLength();\r\n\t\t\tconst endBlockTextLength = endBlock.getLength();\r\n\t\t\tconst startSelectedTextLength = startBlockTextLength - currentSelection.getStartOffset();\r\n\t\t\tconst endSelectedTextLength = currentSelection.getEndOffset();\r\n\t\t\tconst keyAfterEnd = currentContent.getKeyAfter(endKey);\r\n\r\n\t\t\tif (isStartAndEndBlockAreTheSame) {\r\n\t\t\t\tlength += currentSelection.getEndOffset() - currentSelection.getStartOffset();\r\n\t\t\t} else {\r\n\t\t\t\tlet currentKey = startKey;\r\n\t\t\t\tlet counter = 0;\r\n\r\n\t\t\t\twhile (currentKey && currentKey !== keyAfterEnd) {\r\n\t\t\t\t\tif (currentKey === startKey) {\r\n\t\t\t\t\t\tlength += startSelectedTextLength + 1;\r\n\t\t\t\t\t} else if (currentKey === endKey) {\r\n\t\t\t\t\t\tlength += endSelectedTextLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlength += currentContent.getBlockForKey(currentKey).getLength() + 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentKey = currentContent.getKeyAfter(currentKey);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn length;\r\n\t}\r\n\r\n\t_handleBeforeInput = () => {\r\n\t\tconsole.log('hello');\r\n\t\tconst currentContent = this.state.editorState.getCurrentContent();\r\n\t\tconst currentContentLength = currentContent.getPlainText('').length\r\n\r\n\t\tif (currentContentLength > MAX_LENGTH - 1) {\r\n\t\t\tconsole.log('you can type max ten characters');\r\n\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\t}\r\n\r\n\t_handlePastedText = (pastedText) => {\r\n\t\tconst currentContent = this.state.editorState.getCurrentContent();\r\n\t\tconst currentContentLength = currentContent.getPlainText('').length;\r\n\t\tconst selectedTextLength = this._getLengthOfSelectedText();\r\n\r\n\t\tif (currentContentLength + pastedText.length - selectedTextLength > MAX_LENGTH) {\r\n\t\t\tconsole.log('you can type max ten characters');\r\n\r\n\t\t\treturn 'handled';\r\n\t\t}\r\n\t}\r\n\r\n\t_handleKeyCommand(command) {\r\n\t\tconst { editorState } = this.state;\r\n\t\tconst newState = RichUtils.handleKeyCommand(editorState, command);\r\n\t\tif (newState) {\r\n\t\t\tthis.onChange(newState);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t_onTab(e) {\r\n\t\tconst maxDepth = 4;\r\n\t\tthis.onChange(RichUtils.onTab(e, this.state.editorState, maxDepth));\r\n\t}\r\n\r\n\t_toggleBlockType(blockType) {\r\n\t\tthis.onChange(\r\n\t\t\tRichUtils.toggleBlockType(\r\n\t\t\t\tthis.state.editorState,\r\n\t\t\t\tblockType\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t_toggleInlineStyle(inlineStyle) {\r\n\t\tif(inlineStyle == 'SAVE') {\r\n\t\t\tvar raw_content = convertToRaw(this.state.editorState.getCurrentContent());\r\n\t\t\tthis.my_func(JSON.stringify(raw_content))\r\n\t\t} else {\r\n\t\t\tthis.onChange(\r\n\t\t\t\tRichUtils.toggleInlineStyle(\r\n\t\t\t\t\tthis.state.editorState,\r\n\t\t\t\t\tinlineStyle\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { editorState } = this.state;\r\n\r\n\t\t// If the user changes block type before entering any text, we can\r\n\t\t// either style the placeholder or hide it. Let's just hide it now.\r\n\t\tlet className = 'RichEditor-editor';\r\n\t\tvar contentState = editorState.getCurrentContent();\r\n\t\tif (!contentState.hasText()) {\r\n\t\t\tif (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n\t\t\t\tclassName += ' RichEditor-hidePlaceholder';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (!this.state.editorState) {\r\n\t\t\treturn (\r\n\t\t\t\t<h3 className=\"loading\">Loading...</h3>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"RichEditor-root\">\r\n\t\t\t\t\t<BlockStyleControls\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tonToggle={this.toggleBlockType}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InlineStyleControls\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tonToggle={this.toggleInlineStyle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={className} style={{backgroundColor: 'white'}} onClick={this.focus}>\r\n\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\tblockStyleFn={getBlockStyle}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\t\thandleKeyCommand={this.handleKeyCommand}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\tonTab={this.onTab}\r\n\t\t\t\t\t\t\tplaceholder=\"Tell a story...\"\r\n\t\t\t\t\t\t\tkeyBindingFn={myKeyBindingFn}\r\n\t\t\t\t\t\t\tref=\"editor\"\r\n\t\t\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\t\t\tmy_func={this.my_func}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n\tCODE: {\r\n\t\tbackgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n\t\tfontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n\t\tfontSize: 12,\r\n\t\tpadding: 1,\r\n\t},\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n\tswitch (block.getType()) {\r\n\t\tcase 'blockquote': return 'RichEditor-blockquote';\r\n\t\tdefault: return null;\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass StyleButton extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.onToggle = (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.props.onToggle(this.props.style);\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet className = 'RichEditor-styleButton ui button';\r\n\t\tif (this.props.active) {\r\n\t\t\tclassName += ' RichEditor-activeButton';\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<span className={className} onMouseDown={this.onToggle}>\r\n\t\t\t\t{this.props.label}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nconst BLOCK_TYPES = [\r\n\t{ label: 'H1', style: 'header-one' },\r\n\t{ label: 'H2', style: 'header-two' },\r\n\t{ label: 'H3', style: 'header-three' },\r\n\t{ label: 'H4', style: 'header-four' },\r\n\t{ label: 'H5', style: 'header-five' },\r\n\t{ label: 'H6', style: 'header-six' },\r\n\t{ label: 'Blockquote', style: 'blockquote' },\r\n\t{ label: 'UL', style: 'unordered-list-item' },\r\n\t{ label: 'OL', style: 'ordered-list-item' },\r\n\t{ label: 'Code Block', style: 'code-block' },\r\n];\r\n\r\n\r\n\r\nconst BlockStyleControls = (props) => {\r\n\tconst { editorState } = props;\r\n\tconst selection = editorState.getSelection();\r\n\tconst blockType = editorState\r\n\t\t.getCurrentContent()\r\n\t\t.getBlockForKey(selection.getStartKey())\r\n\t\t.getType();\r\n\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{BLOCK_TYPES.map((type) =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={type.style === blockType}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nvar INLINE_STYLES = [\r\n\t{ label: 'Bold', style: 'BOLD' },\r\n\t{ label: 'Italic', style: 'ITALIC' },\r\n\t{ label: 'Underline', style: 'UNDERLINE' },\r\n\t{ label: 'Monospace', style: 'CODE' },\r\n\t{ label: 'Save', style: 'SAVE' },\r\n];\r\n\r\n\r\n\r\nconst InlineStyleControls = (props) => {\r\n\tvar currentStyle = props.editorState.getCurrentInlineStyle();\r\n\treturn (\r\n\t\t<div className=\"RichEditor-controls\">\r\n\t\t\t{INLINE_STYLES.map(type =>\r\n\t\t\t\t<StyleButton\r\n\t\t\t\t\tkey={type.label}\r\n\t\t\t\t\tactive={currentStyle.has(type.style)}\r\n\t\t\t\t\tlabel={type.label}\r\n\t\t\t\t\tonToggle={props.onToggle}\r\n\t\t\t\t\tstyle={type.style}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport default RichEditorExample;"]},"metadata":{},"sourceType":"module"}