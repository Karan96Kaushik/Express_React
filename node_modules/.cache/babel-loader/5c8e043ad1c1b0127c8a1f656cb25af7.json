{"ast":null,"code":"var _jsxFileName = \"/home/karan/Documents/GitWorkSpace/Express_React/src/mangaowl.js\";\nimport '@progress/kendo-theme-default/dist/all.css';\nimport React, { Component } from 'react';\nimport './style.css';\nimport Combo from './search';\nimport Btn from './mui_button';\nimport Inp from './mui_input';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this._value = '';\n    this.promiseOptions = this.promiseOptions.bind(this);\n    this.chapOptions = this.chapOptions.bind(this);\n    this.anime = '';\n  }\n\n  promiseOptions(e) {\n    var data = e;\n\n    if (data.length > 3) {\n      console.log(data);\n      var link = 'https://mangaowl.net/live_search/' + encodeURIComponent(data);\n      console.log('LINK', link);\n      return new Promise(resolve => {\n        fetch(link, {\n          method: 'GET' //mode: 'no-cors',\n\n        }).then(response => response.json()).then(data => {\n          console.log('Success:', data);\n          var list = [];\n          data.map(el => {\n            list.push({\n              label: el.name,\n              value: el.url\n            });\n          });\n          resolve(list); //setList(data)\n        }).catch(error => {\n          console.error('Error:', error);\n        }); //setList(values)\n        //console.log(list_values)\n      });\n    } else {\n      return new Promise(resolve => {\n        resolve([//{ label: \"Hi\", value: 1 },\n          //{ label: \"Hello\", value: 1 }\n        ]);\n      });\n    }\n  }\n\n  selected_anime(url) {\n    console.log('', this._value, '', 'Selected URL', url.value);\n    this.anime = \"https://manga-owl.com\" + url.value;\n  }\n\n  chapOptions(anime_name) {\n    var data = anime_name;\n\n    if (data.length > 3) {\n      console.log(data);\n      var link = 'http://localhost:3333/anime_list?url=' + encodeURIComponent(data);\n      console.log('LINK', link);\n      return new Promise(resolve => {\n        fetch(link, {\n          method: 'GET' //mode: 'no-cors',\n\n        }).then(response => response.json()).then(data => {\n          console.log('Success:', data);\n          var list = [];\n          data.map(el => {\n            list.push({\n              label: el.name,\n              value: el.url\n            });\n          });\n          resolve(list); //setList(data)\n        }).catch(error => {\n          console.error('Error:', error);\n        }); //setList(values)\n        //console.log(list_values)\n      });\n    } else {\n      return new Promise(resolve => {\n        resolve([//{ label: \"Hi\", value: 1 },\n          //{ label: \"Hello\", value: 1 }\n        ]);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"70%\",\n        textAlign: 'center',\n        marginRight: '15%',\n        marginLeft: \"15%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(AsyncSelect, {\n      cacheOptions: true,\n      defaultOptions: true,\n      loadOptions: this.promiseOptions,\n      onChange: this.selected_anime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(AsyncSelect, {\n      cacheOptions: true,\n      defaultOptions: true,\n      loadOptions: this.chapOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 4\n      }\n    })) // <Combo />\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/Express_React/src/mangaowl.js"],"names":["React","Component","Combo","Btn","Inp","Select","AsyncSelect","App","constructor","_value","promiseOptions","bind","chapOptions","anime","e","data","length","console","log","link","encodeURIComponent","Promise","resolve","fetch","method","then","response","json","list","map","el","push","label","name","value","url","catch","error","selected_anime","anime_name","render","width","textAlign","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import '@progress/kendo-theme-default/dist/all.css';\nimport React, { Component } from 'react';\nimport './style.css';\nimport Combo from './search'\nimport Btn from './mui_button';\nimport Inp from './mui_input';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._value = ''\n\t\tthis.promiseOptions = this.promiseOptions.bind(this);\n\t\tthis.chapOptions = this.chapOptions.bind(this);\n\t\tthis.anime = '';\n\t}\n\n\tpromiseOptions(e) {\n\t\tvar data = e\n\n\t\tif (data.length > 3) {\n\t\t\tconsole.log(data)\n\n\t\t\tvar link = 'https://mangaowl.net/live_search/' + encodeURIComponent(data)\n\t\t\tconsole.log('LINK', link)\n\n\t\t\treturn new Promise(resolve => {\n\n\t\t\t\tfetch(link, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t//mode: 'no-cors',\n\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tconsole.log('Success:', data);\n\t\t\t\t\t\tvar list = []\n\t\t\t\t\t\tdata.map((el) => {\n\t\t\t\t\t\t\tlist.push({\n\t\t\t\t\t\t\t\tlabel:el.name,\n\t\t\t\t\t\t\t\tvalue:el.url\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tresolve(list)\n\t\t\t\t\t\t//setList(data)\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t});\n\n\t\t\t\t//setList(values)\n\n\t\t\t\t//console.log(list_values)\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tresolve([\n\t\t\t\t\t//{ label: \"Hi\", value: 1 },\n\t\t\t\t\t//{ label: \"Hello\", value: 1 }\n\t\t\t\t])\n\t\t\t});\n\t\t}\n\t}\n\n\tselected_anime(url) {\n\t\tconsole.log('',this._value,'','Selected URL', url.value );\n\t\tthis.anime = \"https://manga-owl.com\" + url.value;\n\t}\n\n\tchapOptions(anime_name) {\n\t\tvar data = anime_name\n\n\t\tif (data.length > 3) {\n\t\t\tconsole.log(data)\n\n\t\t\tvar link = 'http://localhost:3333/anime_list?url=' + encodeURIComponent(data)\n\t\t\tconsole.log('LINK', link)\n\n\t\t\treturn new Promise(resolve => {\n\n\t\t\t\tfetch(link, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t//mode: 'no-cors',\n\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tconsole.log('Success:', data);\n\t\t\t\t\t\tvar list = []\n\t\t\t\t\t\tdata.map((el) => {\n\t\t\t\t\t\t\tlist.push({\n\t\t\t\t\t\t\t\tlabel:el.name,\n\t\t\t\t\t\t\t\tvalue:el.url\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tresolve(list)\n\t\t\t\t\t\t//setList(data)\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t});\n\n\t\t\t\t//setList(values)\n\n\t\t\t\t//console.log(list_values)\n\t\t\t});\n\t\t} else {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tresolve([\n\t\t\t\t\t//{ label: \"Hi\", value: 1 },\n\t\t\t\t\t//{ label: \"Hello\", value: 1 }\n\t\t\t\t])\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t\n\t\t\t<div style={{width:\"70%\", textAlign:'center', marginRight:'15%', marginLeft:\"15%\"}}>\n\t\t\t<br></br>\n\t\t\t<AsyncSelect cacheOptions defaultOptions loadOptions={this.promiseOptions} onChange={this.selected_anime} />\n\t\t\t<AsyncSelect cacheOptions defaultOptions loadOptions={this.chapOptions} />\n\t\t\t</div>\n\t\t\t// <Combo />\n\t\t);\n\t}\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}