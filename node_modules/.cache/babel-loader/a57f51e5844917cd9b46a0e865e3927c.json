{"ast":null,"code":"var _jsxFileName = \"/home/karansgs/Documents/githubWorkSpace/Express_React/src/index.js\";\nimport React, { useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App'; // import ThemeProvider from './components/Theme';\n\nimport { ThemeProvider, darkTheme, lightTheme, ThemeContext } from './components/Theme';\nimport * as serviceWorker from './serviceWorker';\nimport { useState } from 'react';\nimport AppBar from './components/AppBar';\n\nfunction Main(props) {\n  var [theme, setTheme] = useState({\n    dark: true\n  }); // const themeMode = useContext(ThemeContext);\n\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme.dark ? darkTheme : lightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }))));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Main, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/karansgs/Documents/githubWorkSpace/Express_React/src/index.js"],"names":["React","useContext","ReactDOM","BrowserRouter","App","ThemeProvider","darkTheme","lightTheme","ThemeContext","serviceWorker","useState","AppBar","Main","props","theme","setTheme","dark","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,EAA+CC,YAA/C,QAAmE,oBAAnE;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC,CADmB,CAEnB;;AAEA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAK,CAACE,IAAN,GAAaV,SAAb,GAAyBC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF;AAUD;;AAEDL,QAAQ,CAACe,MAAT,eACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACAV,aAAa,CAACW,UAAd","sourcesContent":["import React, { useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n// import ThemeProvider from './components/Theme';\r\nimport { ThemeProvider, darkTheme, lightTheme, ThemeContext } from './components/Theme';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { useState } from 'react';\r\nimport AppBar from './components/AppBar';\r\n\r\nfunction Main(props) {\r\n  var [theme, setTheme] = useState({ dark: true })\r\n  // const themeMode = useContext(ThemeContext);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme }}>\r\n      <ThemeProvider theme={theme.dark ? darkTheme : lightTheme}>\r\n        <AppBar />\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </ThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <Main />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}