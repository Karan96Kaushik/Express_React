{"ast":null,"code":"var _jsxFileName = \"/home/karan/Documents/GitWorkSpace/Express_React/src/new_editor.js\";\nimport React from \"react\";\nimport { EditorState, RichUtils, AtomicBlockUtils } from \"draft-js\";\nimport Editor from \"draft-js-plugins-editor\";\nimport { mediaBlockRenderer } from \"./entities/mediaBlockRenderer\";\nimport \"./App.css\";\n\nclass PageContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n\n    this.handleKeyCommand = command => {\n      const newState = RichUtils.handleKeyCommand(this.state.editorState, command);\n\n      if (newState) {\n        this.onChange(newState);\n        return \"handled\";\n      }\n\n      return \"not-handled\";\n    };\n\n    this.onURLChange = e => this.setState({\n      urlValue: e.target.value\n    });\n\n    this.focus = () => this.refs.editor.focus();\n\n    this.onAddImage = e => {\n      e.preventDefault();\n      const editorState = this.state.editorState;\n      const urlValue = window.prompt(\"Paste Image Link\");\n      const contentState = editorState.getCurrentContent();\n      const contentStateWithEntity = contentState.createEntity(\"image\", \"IMMUTABLE\", {\n        src: urlValue\n      });\n      const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n      const newEditorState = EditorState.set(editorState, {\n        currentContent: contentStateWithEntity\n      }, \"create-entity\");\n      this.setState({\n        editorState: AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n      }, () => {\n        setTimeout(() => this.focus(), 0);\n      });\n    };\n\n    this.onUnderlineClick = () => {\n      this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, \"UNDERLINE\"));\n    };\n\n    this.onBoldClick = () => {\n      this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, \"BOLD\"));\n    };\n\n    this.onItalicClick = () => {\n      this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, \"ITALIC\"));\n    };\n\n    this.state = {\n      editorState: EditorState.createEmpty()\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editorContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menuButtons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onUnderlineClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"U\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onBoldClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"B\")), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onItalicClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"I\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"inline styleButton\",\n      onClick: this.onAddImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      style: {\n        fontSize: \"16px\",\n        textAlign: \"center\",\n        padding: \"0px\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"image\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      blockRendererFn: mediaBlockRenderer,\n      editorState: this.state.editorState,\n      handleKeyCommand: this.handleKeyCommand,\n      onChange: this.onChange,\n      plugins: this.plugins,\n      ref: \"editor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default PageContainer;","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/Express_React/src/new_editor.js"],"names":["React","EditorState","RichUtils","AtomicBlockUtils","Editor","mediaBlockRenderer","PageContainer","Component","constructor","props","onChange","editorState","setState","handleKeyCommand","command","newState","state","onURLChange","e","urlValue","target","value","focus","refs","editor","onAddImage","preventDefault","window","prompt","contentState","getCurrentContent","contentStateWithEntity","createEntity","src","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","insertAtomicBlock","setTimeout","onUnderlineClick","toggleInlineStyle","onBoldClick","onItalicClick","createEmpty","render","fontSize","textAlign","padding","margin","plugins"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { EditorState, RichUtils, AtomicBlockUtils } from \"draft-js\";\nimport Editor from \"draft-js-plugins-editor\";\nimport { mediaBlockRenderer } from \"./entities/mediaBlockRenderer\";\nimport \"./App.css\";\n\nclass PageContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty()\n    };\n  }\n\n  onChange = editorState => {\n    this.setState({\n      editorState\n    });\n  };\n\n  handleKeyCommand = command => {\n    const newState = RichUtils.handleKeyCommand(\n      this.state.editorState,\n      command\n    );\n    if (newState) {\n      this.onChange(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n\n  onURLChange = e => this.setState({ urlValue: e.target.value });\n\n  focus = () => this.refs.editor.focus();\n\n  onAddImage = e => {\n    e.preventDefault();\n    const editorState = this.state.editorState;\n    const urlValue = window.prompt(\"Paste Image Link\");\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      \"image\",\n      \"IMMUTABLE\",\n      { src: urlValue }\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(\n      editorState,\n      { currentContent: contentStateWithEntity },\n      \"create-entity\"\n    );\n    this.setState(\n      {\n        editorState: AtomicBlockUtils.insertAtomicBlock(\n          newEditorState,\n          entityKey,\n          \" \"\n        )\n      },\n      () => {\n        setTimeout(() => this.focus(), 0);\n      }\n    );\n  };\n\n  onUnderlineClick = () => {\n    this.onChange(\n      RichUtils.toggleInlineStyle(this.state.editorState, \"UNDERLINE\")\n    );\n  };\n\n  onBoldClick = () => {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, \"BOLD\"));\n  };\n\n  onItalicClick = () => {\n    this.onChange(\n      RichUtils.toggleInlineStyle(this.state.editorState, \"ITALIC\")\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"editorContainer\">\n        <div className=\"menuButtons\">\n          <button onClick={this.onUnderlineClick}>U</button>\n          <button onClick={this.onBoldClick}>\n            <b>B</b>\n          </button>\n          <button onClick={this.onItalicClick}>\n            <em>I</em>\n          </button>\n          <button className=\"inline styleButton\" onClick={this.onAddImage}>\n            <i\n              className=\"material-icons\"\n              style={{\n                fontSize: \"16px\",\n                textAlign: \"center\",\n                padding: \"0px\",\n                margin: \"0px\"\n              }}\n            >\n              image\n            </i>\n          </button>\n        </div>\n        <div className=\"editors\">\n          <Editor\n            blockRendererFn={mediaBlockRenderer}\n            editorState={this.state.editorState}\n            handleKeyCommand={this.handleKeyCommand}\n            onChange={this.onChange}\n            plugins={this.plugins}\n            ref=\"editor\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PageContainer;\n"]},"metadata":{},"sourceType":"module"}