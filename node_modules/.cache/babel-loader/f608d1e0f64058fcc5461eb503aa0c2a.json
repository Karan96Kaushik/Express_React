{"ast":null,"code":"\"use strict\";\n\nconst bv = require(\"bvalid\");\n\nconst alpha = require(\"../alpha\");\n\nconst Constant = require(\"../helper/Constants\");\n/*\n*-------------------------------------------*\n*  option avilable in fonts                 *\n*-------------------------------------------*\n*  bold     (convert in bold letter)        *\n*  italic   (convert in italic letter)      *\n*  upr      (convert in uppercase letter)   *\n*  lwr      (convert in lowercase letter)   *\n*  cap      (capitalize letter)             *\n*-------------------------------------------*\n*/\n\n\nexports.createFont = function (_v, _r, _f) {\n  if (bv.isNumber(_r) === false) {\n    return _v;\n  }\n\n  var _sp;\n\n  if (_f == \"normalEn\" || _f == \"Cursive\") {\n    _sp = \"\";\n  } else {\n    _sp = \"\\u0020\";\n  }\n\n  var _ltr = alpha[_f][_r];\n\n  if (bv.isString(_ltr)) {\n    return _ltr + _sp;\n  } else {\n    return _v;\n  }\n};\n\nexports.applyStyle = function (_v, _s) {\n  var o = Constant.styles[_s] ? Constant.styles[_s][\"o\"] : \"\";\n  var c = Constant.styles[_s] ? Constant.styles[_s][\"c\"] : \"\";\n  _v = o + _v + c;\n  return _v;\n};","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/Express_React/node_modules/unifont/lib/util/Style.js"],"names":["bv","require","alpha","Constant","exports","createFont","_v","_r","_f","isNumber","_sp","_ltr","isString","applyStyle","_s","o","styles","c"],"mappings":"AAAA;;AACA,MAAMA,EAAE,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAArB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,qBAAD,CAAxB;AACA;;;;;;;;;;;;;AAaAG,OAAO,CAACC,UAAR,GAAqB,UAASC,EAAT,EAAYC,EAAZ,EAAeC,EAAf,EAAkB;AACnC,MAAGR,EAAE,CAACS,QAAH,CAAYF,EAAZ,MAAoB,KAAvB,EAA6B;AAC3B,WAAOD,EAAP;AACD;;AACD,MAAII,GAAJ;;AACA,MAAGF,EAAE,IAAI,UAAN,IAAoBA,EAAE,IAAI,SAA7B,EAAuC;AACrCE,IAAAA,GAAG,GAAG,EAAN;AACD,GAFD,MAEO;AACLA,IAAAA,GAAG,GAAG,QAAN;AACD;;AACD,MAAIC,IAAI,GAAGT,KAAK,CAACM,EAAD,CAAL,CAAUD,EAAV,CAAX;;AACA,MAAGP,EAAE,CAACY,QAAH,CAAYD,IAAZ,CAAH,EACA;AACE,WAAOA,IAAI,GAAGD,GAAd;AACD,GAHD,MAIA;AACE,WAAOJ,EAAP;AACD;AACJ,CAlBD;;AAoBAF,OAAO,CAACS,UAAR,GAAqB,UAASP,EAAT,EAAYQ,EAAZ,EAAe;AAChC,MAAIC,CAAC,GAAGZ,QAAQ,CAACa,MAAT,CAAgBF,EAAhB,IAAsBX,QAAQ,CAACa,MAAT,CAAgBF,EAAhB,EAAoB,GAApB,CAAtB,GAAiD,EAAzD;AACA,MAAIG,CAAC,GAAGd,QAAQ,CAACa,MAAT,CAAgBF,EAAhB,IAAsBX,QAAQ,CAACa,MAAT,CAAgBF,EAAhB,EAAoB,GAApB,CAAtB,GAAiD,EAAzD;AACAR,EAAAA,EAAE,GAAIS,CAAC,GAAGT,EAAJ,GAASW,CAAf;AACA,SAAOX,EAAP;AACH,CALD","sourcesContent":["\"use strict\";\nconst bv = require(\"bvalid\");\nconst alpha = require(\"../alpha\");\nconst Constant = require(\"../helper/Constants\")\n/*\n*-------------------------------------------*\n*  option avilable in fonts                 *\n*-------------------------------------------*\n*  bold     (convert in bold letter)        *\n*  italic   (convert in italic letter)      *\n*  upr      (convert in uppercase letter)   *\n*  lwr      (convert in lowercase letter)   *\n*  cap      (capitalize letter)             *\n*-------------------------------------------*\n*/\n\n\nexports.createFont = function(_v,_r,_f){\n    if(bv.isNumber(_r) === false){\n      return _v\n    }\n    var _sp;\n    if(_f == \"normalEn\" || _f == \"Cursive\"){\n      _sp = \"\";\n    } else {\n      _sp = \"\\u0020\";\n    }\n    var _ltr = alpha[_f][_r];\n    if(bv.isString(_ltr))\n    {\n      return _ltr + _sp;\n    } else\n    {\n      return _v;\n    }\n}\n\nexports.applyStyle = function(_v,_s){\n    var o = Constant.styles[_s] ? Constant.styles[_s][\"o\"] : \"\";\n    var c = Constant.styles[_s] ? Constant.styles[_s][\"c\"] : \"\";\n    _v =  o + _v + c;\n    return _v;\n}\n\n\n\n"]},"metadata":{},"sourceType":"script"}