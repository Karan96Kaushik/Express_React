{"ast":null,"code":"var _jsxFileName = \"/home/karan/Documents/GitWorkSpace/draftjs_test/react-draft-js-demo/src/index.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport './style.css';\nimport RichEditorExample from './draft';\nimport GetData from './getdata';\nimport { Editor, EditorState, RichUtils, convertFromRaw, convertToRaw, getDefaultKeyBinding, KeyBindingUtil } from 'draft-js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.raw_state = '';\n    var _raw = '';\n    fetch('http://localhost:4545/add', {\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n\n      if (data.raw_state) {\n        console.log('RAW State Rx', data.raw_state, this.raw_state);\n        this.myRef.current.setState({\n          editorState: EditorState.createWithContent(convertFromRaw(data.raw_state))\n        });\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    this.state = {\n      name: 'React'\n    };\n    this.myRef = React.createRef();\n    console.log('RAW STs', this.raw_state, _raw);\n  }\n\n  saving_function(raw_state) {\n    var data = {\n      raw_state: raw_state\n    };\n    fetch('http://localhost:4545/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"side-padding-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(RichEditorExample, {\n      my_func: this.saving_function,\n      editorState: this.state.editorState,\n      raw_state: this.raw_state,\n      onChange: this.onChange,\n      handleBeforeInput: this._handleBeforeInput,\n      handlePastedText: this._handlePastedText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nrender( /*#__PURE__*/React.createElement(App, {\n  ref: this.myRef,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 8\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/draftjs_test/react-draft-js-demo/src/index.js"],"names":["React","Component","render","Hello","RichEditorExample","GetData","Editor","EditorState","RichUtils","convertFromRaw","convertToRaw","getDefaultKeyBinding","KeyBindingUtil","App","constructor","raw_state","_raw","fetch","method","then","response","json","data","console","log","myRef","current","setState","editorState","createWithContent","catch","error","state","name","createRef","saving_function","headers","body","JSON","stringify","onChange","_handleBeforeInput","_handlePastedText","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport './style.css';\n\nimport RichEditorExample from './draft';\nimport GetData from './getdata';\nimport {\n\tEditor,\n\tEditorState,\n\tRichUtils,\n\tconvertFromRaw,\n\tconvertToRaw,\n\tgetDefaultKeyBinding,\n\tKeyBindingUtil\n} from 'draft-js';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.raw_state = '';\n\t\tvar _raw = ''\n\n\t\tfetch('http://localhost:4545/add', {\n\t\t\tmethod: 'GET',\n\t\t}).then(response => response.json()).then(data => {\n\n\t\t\tconsole.log('Success:', data);\n\n\t\t\tif (data.raw_state) {\n\t\t\t\tconsole.log('RAW State Rx', data.raw_state, this.raw_state);\n\t\t\t\tthis.myRef.current.setState({\n\t\t\t\t\teditorState: EditorState.createWithContent(convertFromRaw((data.raw_state)))\n\t\t\t\t})\n\t\t\t}\n\n\t\t}).catch((error) => {\n\t\t\tconsole.error('Error:', error);\n\t\t});\n\n\t\tthis.state = {\n\t\t\tname: 'React'\n\t\t};\n\n\t\tthis.myRef = React.createRef();\n\n\t\tconsole.log('RAW STs', this.raw_state, _raw)\n\t}\n\n\tsaving_function(raw_state) {\n\t\tvar data = { raw_state: raw_state };\n\n\t\tfetch('http://localhost:4545/add', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Success:', data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"side-padding-20\">\n\t\t\t\t\t<RichEditorExample\n\t\t\t\t\t\tmy_func={this.saving_function}\n\t\t\t\t\t\teditorState={this.state.editorState}\n\t\t\t\t\t\traw_state={this.raw_state}\n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\thandleBeforeInput={this._handleBeforeInput}\n\t\t\t\t\t\thandlePastedText={this._handlePastedText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<br />\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nrender(<App ref={this.myRef} />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}