{"ast":null,"code":"var _jsxFileName = \"/home/karan/Documents/GitWorkSpace/Express_React/src/getdata.js\";\nimport React, { Component } from 'react';\nimport { EditorState, Editor, convertToRaw, convertFromRaw } from 'draft-js';\n\nclass GetData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.article = data => {\n      console.log('asdada');\n      data.map(item => {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 12\n          }\n        }, \"hello\");\n      });\n    };\n\n    this.state = {\n      articleData: []\n    };\n    this.article = this.article.bind(this);\n  }\n\n  componentDidMount() {\n    let getRawData = JSON.parse(JSON.stringify(window.localStorage.getItem('content')));\n    let rawData = JSON.parse(getRawData);\n    console.log(rawData.blocks); //if(rawData){\n\n    this.setState({\n      articleData: rawData.blocks\n    }); //}\n\n    console.log(this.state.articleData);\n  }\n\n  render() {\n    if (!this.state.articleData) {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, this.article(this.state.articleData));\n  }\n\n}\n\nexport default GetData;","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/Express_React/src/getdata.js"],"names":["React","Component","EditorState","Editor","convertToRaw","convertFromRaw","GetData","constructor","props","article","data","console","log","map","item","state","articleData","bind","componentDidMount","getRawData","JSON","parse","stringify","window","localStorage","getItem","rawData","blocks","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,YAA9B,EAA4CC,cAA5C,QAAkE,UAAlE;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAA+B;AAG/BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SA2BlBC,OA3BkB,GA2BTC,IAAD,IAAQ;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAF,MAAAA,IAAI,CAACG,GAAL,CAASC,IAAI,IAAI;AACf,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,OAFD;AAID,KAjCiB;;AAEhB,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGF,SAAKP,OAAL,GAAa,KAAKA,OAAL,CAAaQ,IAAb,CAAkB,IAAlB,CAAb;AACC;;AAGDC,EAAAA,iBAAiB,GAAE;AAEnB,QAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAgBC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,CAAhB,CAAX,CAAjB;AAEA,QAAIC,OAAO,GAAEN,IAAI,CAACC,KAAL,CAAWF,UAAX,CAAb;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAYc,OAAO,CAACC,MAApB,EANmB,CAQjB;;AACE,SAAKC,QAAL,CAAc;AACZZ,MAAAA,WAAW,EAAEU,OAAO,CAACC;AADT,KAAd,EATe,CAYjB;;AAEDhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWC,WAAvB;AAEA;;AAUCa,EAAAA,MAAM,GAAE;AAEN,QAAI,CAAC,KAAKd,KAAL,CAAWC,WAAhB,EAA6B;AAC3B,0BACE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,OAAL,CAAa,KAAKM,KAAL,CAAWC,WAAxB,CADH,CADF;AAKD;;AAnD4B;;AAsD/B,eAAeV,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { EditorState, Editor, convertToRaw, convertFromRaw } from 'draft-js';\r\n\r\nclass GetData extends Component{\r\n\r\n\r\nconstructor(props){\r\n  super(props)\r\n  this.state = {\r\n    articleData: []\r\n  }\r\nthis.article=this.article.bind(this);\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n\r\nlet getRawData = JSON.parse(JSON.stringify((window.localStorage.getItem('content'))));\r\n\r\nlet rawData= JSON.parse(getRawData);\r\n\r\nconsole.log(rawData.blocks)\r\n\r\n  //if(rawData){\r\n    this.setState({\r\n      articleData: rawData.blocks\r\n    })\r\n  //}\r\n\r\n console.log(this.state.articleData)   \r\n\r\n}\r\n\r\narticle=(data)=>{\r\n  console.log('asdada');\r\n  data.map(item => {\r\n    return <h1>hello</h1>;\r\n  })\r\n\r\n}\r\n\r\n  render(){\r\n\r\n    if (!this.state.articleData) {\r\n      return (\r\n        <h3 className=\"loading\">Loading...</h3>\r\n      );\r\n    }\r\n  \r\n    return(\r\n      <div>\r\n        {this.article(this.state.articleData)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetData;"]},"metadata":{},"sourceType":"module"}