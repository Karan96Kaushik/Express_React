{"ast":null,"code":"var _jsxFileName = \"/home/karan/Documents/GitWorkSpace/Express_React/src/search.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { PinDropSharp } from '@material-ui/icons';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst useStyles = makeStyles(theme => ({\n  boot: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n      color: 'white',\n      textAlign: 'left',\n      borderColor: 'yellow'\n    },\n    '& label': {\n      color: 'grey',\n      fontSize: '10px'\n    },\n    '& label.Mui-focused': {\n      color: 'white'\n    },\n    '& .MuiInput-underline': {\n      borderBottomColor: 'yellow'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'white'\n    }\n  },\n  overrides: {\n    MuiInput: {\n      underline: {\n        \"&:before\": {\n          borderBottom: `1px solid ${'grey'}`\n        }\n      }\n    }\n  }\n}));\nexport default function ComboBox() {\n  const [list_values, setList] = React.useState([]);\n  console.log(list_values);\n\n  function _selected(target, option) {\n    console.log(option);\n  }\n\n  function _enterd_data(e) {\n    var data = e.target.value;\n\n    if (data.length > 3) {\n      //console.log(data)\n      var link = 'https://mangaowl.net/live_search/' + encodeURIComponent(data);\n      console.log('LINK', link);\n      fetch(link, {\n        method: 'GET' //mode: 'no-cors',\n\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n        setList(data);\n      }).catch(error => {\n        console.error('Error:', error);\n      }); //setList(values)\n\n      console.log(list_values);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: list_values,\n    getOptionLabel: option => option.name,\n    clearOnBlur: false,\n    onInputChange: _enterd_data,\n    onChange: _selected,\n    style: {\n      width: 300\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      value: \"Combo box\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 28\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["/home/karan/Documents/GitWorkSpace/Express_React/src/search.js"],"names":["React","useState","makeStyles","TextField","PinDropSharp","Autocomplete","useStyles","theme","boot","margin","spacing","width","color","textAlign","borderColor","fontSize","borderBottomColor","overrides","MuiInput","underline","borderBottom","ComboBox","list_values","setList","console","log","_selected","target","option","_enterd_data","e","data","value","length","link","encodeURIComponent","fetch","method","then","response","json","catch","error","name","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACxCC,EAAAA,IAAI,EAAE;AACL,aAAS;AACRC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA;AAERC,MAAAA,KAAK,EAAE,MAFC;AAGRC,MAAAA,KAAK,EAAE,OAHC;AAIRC,MAAAA,SAAS,EAAE,MAJH;AAKRC,MAAAA,WAAW,EAAE;AALL,KADJ;AAQL,eAAW;AACVF,MAAAA,KAAK,EAAE,MADG;AAEVG,MAAAA,QAAQ,EAAE;AAFA,KARN;AAYL,2BAAuB;AACtBH,MAAAA,KAAK,EAAE;AADe,KAZlB;AAeL,6BAAyB;AACxBI,MAAAA,iBAAiB,EAAE;AADK,KAfpB;AAkBL,mCAA+B;AAC9BA,MAAAA,iBAAiB,EAAE;AADW;AAlB1B,GADkC;AAuBxCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE;AACZ,oBAAY;AACVC,UAAAA,YAAY,EAAG,aAAY,MAAO;AADxB;AADA;AADH;AADA;AAvB6B,CAAZ,CAAD,CAA5B;AAkCA,eAAe,SAASC,QAAT,GAAoB;AAElC,QAAM,CAACC,WAAD,EAAcC,OAAd,IAAyBvB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA/B;AAEAuB,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;AAEA,WAASI,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmC;AAClCJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA;;AAED,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACxB,QAAIC,IAAI,GAAGD,CAAC,CAACH,MAAF,CAASK,KAApB;;AAEA,QAAGD,IAAI,CAACE,MAAL,GAAc,CAAjB,EAAoB;AACpB;AAEM,UAAIC,IAAI,GAAG,sCAAsCC,kBAAkB,CAACJ,IAAD,CAAnE;AACNP,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBS,IAApB;AACAE,MAAAA,KAAK,CAAEF,IAAF,EAAQ;AACZG,QAAAA,MAAM,EAAE,KADI,CAEZ;;AAFY,OAAR,CAAL,CAIEC,IAJF,CAIOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJnB,EAKEF,IALF,CAKOP,IAAI,IAAI;AACbP,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,IAAxB;AACAR,QAAAA,OAAO,CAACQ,IAAD,CAAP;AACA,OARF,EASEU,KATF,CASSC,KAAD,IAAW;AACjBlB,QAAAA,OAAO,CAACkB,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACA,OAXF,EALoB,CAkBpB;;AAEAlB,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACC;AAED;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AACD,IAAA,EAAE,EAAC,gBADF;AAED,IAAA,OAAO,EAAEA,WAFR;AAGD,IAAA,cAAc,EAAGM,MAAD,IAAYA,MAAM,CAACe,IAHlC;AAID,IAAA,WAAW,EAAE,KAJZ;AAKD,IAAA,aAAa,EAAEd,YALd;AAMD,IAAA,QAAQ,EAAEH,SANT;AAOD,IAAA,KAAK,EAAE;AAAEf,MAAAA,KAAK,EAAE;AAAT,KAPN;AAQD,IAAA,WAAW,EAAGiC,MAAD,iBAAY,oBAAC,SAAD,oBAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC,WAA7B;AAAyC,MAAA,OAAO,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAcE","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { PinDropSharp } from '@material-ui/icons';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles((theme) => ({\n\tboot: {\n\t\t'& > *': {\n\t\t\tmargin: theme.spacing(1),\n\t\t\twidth: '25ch',\n\t\t\tcolor: 'white',\n\t\t\ttextAlign: 'left',\n\t\t\tborderColor: 'yellow'\n\t\t},\n\t\t'& label': {\n\t\t\tcolor: 'grey',\n\t\t\tfontSize: '10px'\n\t\t},\n\t\t'& label.Mui-focused': {\n\t\t\tcolor: 'white',\n\t\t},\n\t\t'& .MuiInput-underline': {\n\t\t\tborderBottomColor: 'yellow',\n\t\t},\n\t\t'& .MuiInput-underline:after': {\n\t\t\tborderBottomColor: 'white',\n\t\t},\n\t},\n\toverrides: {\n\t\tMuiInput: {\n\t\t  underline: {\n\t\t\t\"&:before\": {\n\t\t\t  borderBottom: `1px solid ${'grey'}`\n\t\t\t}\n\t\t  }\n\t\t}\n\t  }\n}));\n\nexport default function ComboBox() {\n\t\n\tconst [list_values, setList] = React.useState([]);\n\n\tconsole.log(list_values)\n\n\tfunction _selected(target, option) {\n\t\tconsole.log(option)\n\t}\n\n\tfunction _enterd_data(e) {\n\t\tvar data = e.target.value\n\n\t\tif(data.length > 3) {\n\t\t//console.log(data)\n\n        var link = 'https://mangaowl.net/live_search/' + encodeURIComponent(data)\n\t\tconsole.log('LINK', link)\n\t\tfetch( link, {\n\t\t\tmethod: 'GET',\n\t\t\t//mode: 'no-cors',\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Success:', data);\n\t\t\t\tsetList(data)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\n\t\t//setList(values)\n\n\t\tconsole.log(list_values)\n\t\t}\n\t\t\n\t}\n\n\treturn (\n\t  <div>\n\t  <Autocomplete\n\t\tid=\"combo-box-demo\"\n\t\toptions={list_values}\n\t\tgetOptionLabel={(option) => option.name}\n\t\tclearOnBlur={false}\n\t\tonInputChange={_enterd_data}\n\t\tonChange={_selected}\n\t\tstyle={{ width: 300 }}\n\t\trenderInput={(params) => <TextField {...params} value=\"Combo box\" variant=\"outlined\" />}\n\t  />\n\t  </div>\n\t);\n  }\n"]},"metadata":{},"sourceType":"module"}